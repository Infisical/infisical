// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const AuditLogStreamsSchema = z.object({
  id: z.string().uuid(),
  url: z.string().nullable().optional(),
  encryptedHeadersCiphertext: z.string().nullable().optional(),
  encryptedHeadersIV: z.string().nullable().optional(),
  encryptedHeadersTag: z.string().nullable().optional(),
  encryptedHeadersAlgorithm: z.string().nullable().optional(),
  encryptedHeadersKeyEncoding: z.string().nullable().optional(),
  orgId: z.string().uuid(),
  createdAt: z.date(),
  updatedAt: z.date(),
  provider: z.string().default("custom"),
  encryptedCredentials: zodBuffer
});

export type TAuditLogStreams = z.infer<typeof AuditLogStreamsSchema>;
export type TAuditLogStreamsInsert = Omit<z.input<typeof AuditLogStreamsSchema>, TImmutableDBKeys>;
export type TAuditLogStreamsUpdate = Partial<Omit<z.input<typeof AuditLogStreamsSchema>, TImmutableDBKeys>>;
