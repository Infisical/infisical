// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const IdentityLdapAuthsSchema = z.object({
  id: z.string().uuid(),
  accessTokenTTL: z.coerce.number().default(7200),
  accessTokenMaxTTL: z.coerce.number().default(7200),
  accessTokenNumUsesLimit: z.coerce.number().default(0),
  accessTokenTrustedIps: z.unknown(),
  identityId: z.string().uuid(),
  encryptedBindDN: zodBuffer,
  encryptedBindPass: zodBuffer,
  encryptedLdapCaCertificate: zodBuffer.nullable().optional(),
  url: z.string(),
  searchBase: z.string(),
  searchFilter: z.string(),
  allowedFields: z.unknown().nullable().optional(),
  createdAt: z.date(),
  updatedAt: z.date(),
  accessTokenPeriod: z.coerce.number().default(0),
  templateId: z.string().uuid().nullable().optional()
});

export type TIdentityLdapAuths = z.infer<typeof IdentityLdapAuthsSchema>;
export type TIdentityLdapAuthsInsert = Omit<z.input<typeof IdentityLdapAuthsSchema>, TImmutableDBKeys>;
export type TIdentityLdapAuthsUpdate = Partial<Omit<z.input<typeof IdentityLdapAuthsSchema>, TImmutableDBKeys>>;
