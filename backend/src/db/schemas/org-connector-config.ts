// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const OrgConnectorConfigSchema = z.object({
  id: z.string().uuid(),
  orgId: z.string().uuid(),
  createdAt: z.date(),
  updatedAt: z.date(),
  encryptedRootConnectorCaPrivateKey: zodBuffer,
  encryptedRootConnectorCaCertificate: zodBuffer,
  encryptedConnectorServerCaPrivateKey: zodBuffer,
  encryptedConnectorServerCaCertificate: zodBuffer,
  encryptedConnectorServerCaCertificateChain: zodBuffer,
  encryptedConnectorClientCaPrivateKey: zodBuffer,
  encryptedConnectorClientCaCertificate: zodBuffer,
  encryptedConnectorClientCaCertificateChain: zodBuffer
});

export type TOrgConnectorConfig = z.infer<typeof OrgConnectorConfigSchema>;
export type TOrgConnectorConfigInsert = Omit<z.input<typeof OrgConnectorConfigSchema>, TImmutableDBKeys>;
export type TOrgConnectorConfigUpdate = Partial<Omit<z.input<typeof OrgConnectorConfigSchema>, TImmutableDBKeys>>;
