// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const OrgRelayConfigSchema = z.object({
  id: z.string().uuid(),
  createdAt: z.date(),
  updatedAt: z.date(),
  orgId: z.string().uuid(),
  encryptedRelayPkiClientCaPrivateKey: zodBuffer,
  encryptedRelayPkiClientCaCertificate: zodBuffer,
  encryptedRelayPkiClientCaCertificateChain: zodBuffer,
  encryptedRelayPkiServerCaPrivateKey: zodBuffer,
  encryptedRelayPkiServerCaCertificate: zodBuffer,
  encryptedRelayPkiServerCaCertificateChain: zodBuffer,
  encryptedRelaySshClientCaPrivateKey: zodBuffer,
  encryptedRelaySshClientCaPublicKey: zodBuffer,
  encryptedRelaySshServerCaPrivateKey: zodBuffer,
  encryptedRelaySshServerCaPublicKey: zodBuffer
});

export type TOrgRelayConfig = z.infer<typeof OrgRelayConfigSchema>;
export type TOrgRelayConfigInsert = Omit<z.input<typeof OrgRelayConfigSchema>, TImmutableDBKeys>;
export type TOrgRelayConfigUpdate = Partial<Omit<z.input<typeof OrgRelayConfigSchema>, TImmutableDBKeys>>;
