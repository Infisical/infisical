// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const UserSecretsSchema = z.object({
  id: z.string().uuid(),
  encryptedTitle: zodBuffer.nullable().optional(),
  encryptedContent: zodBuffer.nullable().optional(),
  encryptedUsername: zodBuffer.nullable().optional(),
  encryptedPassword: zodBuffer.nullable().optional(),
  encryptedCardNumber: zodBuffer.nullable().optional(),
  encryptedExpiryDate: zodBuffer.nullable().optional(),
  encryptedCVV: zodBuffer.nullable().optional(),
  userId: z.string().uuid(),
  orgId: z.string().uuid()
});

export const DecryptedUserSecretSchema = z.object({
  id: z.string().uuid(),
  userId: z.string().uuid(),
  orgId: z.string().uuid(),
  title: z.string().nullable().optional(),
  content: z.string().nullable().optional(),
  username: z.string().nullable().optional(),
  password: z.string().nullable().optional(),
  cardNumber: z.string().nullable().optional(),
  expiryDate: z.string().nullable().optional(),
  cvv: z.string().nullable().optional(),
});

export type TUserSecrets = z.infer<typeof UserSecretsSchema>;
export type TDecryptedUserSecret = z.infer<typeof DecryptedUserSecretSchema>;
export type TUserSecretsInsert = Omit<z.input<typeof UserSecretsSchema>, TImmutableDBKeys>;
export type TUserSecretsUpdate = Partial<Omit<z.input<typeof UserSecretsSchema>, TImmutableDBKeys>>;
