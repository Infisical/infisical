/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RestrictloginsignupImport } from './routes/_restrict_login_signup'
import { Route as AuthenticateImport } from './routes/_authenticate'
import { Route as IndexImport } from './routes/index'
import { Route as RestrictloginsignupVerifyEmailImport } from './routes/_restrict_login_signup/verify-email'
import { Route as RestrictloginsignupSignupinviteImport } from './routes/_restrict_login_signup/signupinvite'
import { Route as RestrictloginsignupRequestnewinviteImport } from './routes/_restrict_login_signup/requestnewinvite'
import { Route as RestrictloginsignupPasswordResetImport } from './routes/_restrict_login_signup/password-reset'
import { Route as RestrictloginsignupEmailNotVerifiedImport } from './routes/_restrict_login_signup/email-not-verified'
import { Route as AuthenticateCliRedirectImport } from './routes/_authenticate/cli-redirect'
import { Route as AuthenticateOrgdetailsImport } from './routes/_authenticate/_org_details'
import { Route as RestrictloginsignupSignupIndexImport } from './routes/_restrict_login_signup/signup/index'
import { Route as RestrictloginsignupLoginIndexImport } from './routes/_restrict_login_signup/login/index'
import { Route as authenticatePersonalSettingsLayoutImport } from './routes/_authenticate/personal-settings/layout'
import { Route as authenticateOrgdetailsLayoutImport } from './routes/_authenticate/_org_details/layout'
import { Route as RestrictloginsignupSignupSsoIndexImport } from './routes/_restrict_login_signup/signup/sso/index'
import { Route as RestrictloginsignupLoginSsoIndexImport } from './routes/_restrict_login_signup/login/sso/index'
import { Route as RestrictloginsignupLoginSelectOrganizationIndexImport } from './routes/_restrict_login_signup/login/select-organization/index'
import { Route as RestrictloginsignupLoginLdapIndexImport } from './routes/_restrict_login_signup/login/ldap/index'
import { Route as authenticatePersonalSettingsIndexImport } from './routes/_authenticate/personal-settings/index'
import { Route as RestrictloginsignupLoginProviderSuccessImport } from './routes/_restrict_login_signup/login/provider/success'
import { Route as RestrictloginsignupLoginProviderErrorImport } from './routes/_restrict_login_signup/login/provider/error'
import { Route as authenticateOrgdetailsOrganizationIndexImport } from './routes/_authenticate/_org_details/organization/index'
import { Route as authenticateOrgdetailsOrganizationNoneIndexImport } from './routes/_authenticate/_org_details/organization/none/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/settings/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/secret-sharing/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/secret-scanning/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/overview/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdMembersIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/members/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdBillingIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/billing/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/audit-logs/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdAdminIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/admin/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewImport } from './routes/_authenticate/_org_details/organization/$organizationId/secret-manager/overview'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewImport } from './routes/_authenticate/_org_details/organization/$organizationId/kms/overview'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewImport } from './routes/_authenticate/_org_details/organization/$organizationId/cert-manager/overview'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/roles/$roleId/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/memberships/$membershipId/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/identities/$identityId/index'
import { Route as authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexImport } from './routes/_authenticate/_org_details/organization/$organizationId/groups/$groupId/index'

// Create Virtual Routes

const AuthenticatePersonalSettingsImport = createFileRoute(
  '/_authenticate/personal-settings',
)()

// Create/Update Routes

const RestrictloginsignupRoute = RestrictloginsignupImport.update({
  id: '/_restrict_login_signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticateRoute = AuthenticateImport.update({
  id: '/_authenticate',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatePersonalSettingsRoute =
  AuthenticatePersonalSettingsImport.update({
    id: '/personal-settings',
    path: '/personal-settings',
    getParentRoute: () => AuthenticateRoute,
  } as any)

const RestrictloginsignupVerifyEmailRoute =
  RestrictloginsignupVerifyEmailImport.update({
    id: '/verify-email',
    path: '/verify-email',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupSignupinviteRoute =
  RestrictloginsignupSignupinviteImport.update({
    id: '/signupinvite',
    path: '/signupinvite',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupRequestnewinviteRoute =
  RestrictloginsignupRequestnewinviteImport.update({
    id: '/requestnewinvite',
    path: '/requestnewinvite',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupPasswordResetRoute =
  RestrictloginsignupPasswordResetImport.update({
    id: '/password-reset',
    path: '/password-reset',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupEmailNotVerifiedRoute =
  RestrictloginsignupEmailNotVerifiedImport.update({
    id: '/email-not-verified',
    path: '/email-not-verified',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const AuthenticateCliRedirectRoute = AuthenticateCliRedirectImport.update({
  id: '/cli-redirect',
  path: '/cli-redirect',
  getParentRoute: () => AuthenticateRoute,
} as any)

const AuthenticateOrgdetailsRoute = AuthenticateOrgdetailsImport.update({
  id: '/_org_details',
  getParentRoute: () => AuthenticateRoute,
} as any)

const RestrictloginsignupSignupIndexRoute =
  RestrictloginsignupSignupIndexImport.update({
    id: '/signup/',
    path: '/signup/',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupLoginIndexRoute =
  RestrictloginsignupLoginIndexImport.update({
    id: '/login/',
    path: '/login/',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const authenticatePersonalSettingsLayoutRoute =
  authenticatePersonalSettingsLayoutImport.update({
    id: '/_personal-settings-layout',
    getParentRoute: () => AuthenticatePersonalSettingsRoute,
  } as any)

const authenticateOrgdetailsLayoutRoute =
  authenticateOrgdetailsLayoutImport.update({
    id: '/_org-layout',
    getParentRoute: () => AuthenticateOrgdetailsRoute,
  } as any)

const RestrictloginsignupSignupSsoIndexRoute =
  RestrictloginsignupSignupSsoIndexImport.update({
    id: '/signup/sso/',
    path: '/signup/sso/',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupLoginSsoIndexRoute =
  RestrictloginsignupLoginSsoIndexImport.update({
    id: '/login/sso/',
    path: '/login/sso/',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupLoginSelectOrganizationIndexRoute =
  RestrictloginsignupLoginSelectOrganizationIndexImport.update({
    id: '/login/select-organization/',
    path: '/login/select-organization/',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupLoginLdapIndexRoute =
  RestrictloginsignupLoginLdapIndexImport.update({
    id: '/login/ldap/',
    path: '/login/ldap/',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const authenticatePersonalSettingsIndexRoute =
  authenticatePersonalSettingsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authenticatePersonalSettingsLayoutRoute,
  } as any)

const RestrictloginsignupLoginProviderSuccessRoute =
  RestrictloginsignupLoginProviderSuccessImport.update({
    id: '/login/provider/success',
    path: '/login/provider/success',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const RestrictloginsignupLoginProviderErrorRoute =
  RestrictloginsignupLoginProviderErrorImport.update({
    id: '/login/provider/error',
    path: '/login/provider/error',
    getParentRoute: () => RestrictloginsignupRoute,
  } as any)

const authenticateOrgdetailsOrganizationIndexRoute =
  authenticateOrgdetailsOrganizationIndexImport.update({
    id: '/organization/',
    path: '/organization/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationNoneIndexRoute =
  authenticateOrgdetailsOrganizationNoneIndexImport.update({
    id: '/organization/none/',
    path: '/organization/none/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexImport.update({
    id: '/organization/$organizationId/settings/',
    path: '/organization/$organizationId/settings/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexImport.update(
    {
      id: '/organization/$organizationId/secret-sharing/',
      path: '/organization/$organizationId/secret-sharing/',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexImport.update(
    {
      id: '/organization/$organizationId/secret-scanning/',
      path: '/organization/$organizationId/secret-scanning/',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexImport.update({
    id: '/organization/$organizationId/overview/',
    path: '/organization/$organizationId/overview/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdMembersIndexImport.update({
    id: '/organization/$organizationId/members/',
    path: '/organization/$organizationId/members/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdBillingIndexImport.update({
    id: '/organization/$organizationId/billing/',
    path: '/organization/$organizationId/billing/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexImport.update({
    id: '/organization/$organizationId/audit-logs/',
    path: '/organization/$organizationId/audit-logs/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdAdminIndexImport.update({
    id: '/organization/$organizationId/admin/',
    path: '/organization/$organizationId/admin/',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute =
  authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewImport.update(
    {
      id: '/organization/$organizationId/secret-manager/overview',
      path: '/organization/$organizationId/secret-manager/overview',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute =
  authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewImport.update({
    id: '/organization/$organizationId/kms/overview',
    path: '/organization/$organizationId/kms/overview',
    getParentRoute: () => authenticateOrgdetailsLayoutRoute,
  } as any)

const authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute =
  authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewImport.update(
    {
      id: '/organization/$organizationId/cert-manager/overview',
      path: '/organization/$organizationId/cert-manager/overview',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexImport.update(
    {
      id: '/organization/$organizationId/roles/$roleId/',
      path: '/organization/$organizationId/roles/$roleId/',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexImport.update(
    {
      id: '/organization/$organizationId/memberships/$membershipId/',
      path: '/organization/$organizationId/memberships/$membershipId/',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexImport.update(
    {
      id: '/organization/$organizationId/identities/$identityId/',
      path: '/organization/$organizationId/identities/$identityId/',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

const authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute =
  authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexImport.update(
    {
      id: '/organization/$organizationId/groups/$groupId/',
      path: '/organization/$organizationId/groups/$groupId/',
      getParentRoute: () => authenticateOrgdetailsLayoutRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticate': {
      id: '/_authenticate'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticateImport
      parentRoute: typeof rootRoute
    }
    '/_restrict_login_signup': {
      id: '/_restrict_login_signup'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RestrictloginsignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticate/_org_details': {
      id: '/_authenticate/_org_details'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticateOrgdetailsImport
      parentRoute: typeof AuthenticateImport
    }
    '/_authenticate/cli-redirect': {
      id: '/_authenticate/cli-redirect'
      path: '/cli-redirect'
      fullPath: '/cli-redirect'
      preLoaderRoute: typeof AuthenticateCliRedirectImport
      parentRoute: typeof AuthenticateImport
    }
    '/_restrict_login_signup/email-not-verified': {
      id: '/_restrict_login_signup/email-not-verified'
      path: '/email-not-verified'
      fullPath: '/email-not-verified'
      preLoaderRoute: typeof RestrictloginsignupEmailNotVerifiedImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/password-reset': {
      id: '/_restrict_login_signup/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof RestrictloginsignupPasswordResetImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/requestnewinvite': {
      id: '/_restrict_login_signup/requestnewinvite'
      path: '/requestnewinvite'
      fullPath: '/requestnewinvite'
      preLoaderRoute: typeof RestrictloginsignupRequestnewinviteImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/signupinvite': {
      id: '/_restrict_login_signup/signupinvite'
      path: '/signupinvite'
      fullPath: '/signupinvite'
      preLoaderRoute: typeof RestrictloginsignupSignupinviteImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/verify-email': {
      id: '/_restrict_login_signup/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof RestrictloginsignupVerifyEmailImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_authenticate/_org_details/_org-layout': {
      id: '/_authenticate/_org_details/_org-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticateOrgdetailsLayoutImport
      parentRoute: typeof AuthenticateOrgdetailsImport
    }
    '/_authenticate/personal-settings': {
      id: '/_authenticate/personal-settings'
      path: '/personal-settings'
      fullPath: '/personal-settings'
      preLoaderRoute: typeof AuthenticatePersonalSettingsImport
      parentRoute: typeof AuthenticateImport
    }
    '/_authenticate/personal-settings/_personal-settings-layout': {
      id: '/_authenticate/personal-settings/_personal-settings-layout'
      path: '/personal-settings'
      fullPath: '/personal-settings'
      preLoaderRoute: typeof authenticatePersonalSettingsLayoutImport
      parentRoute: typeof AuthenticatePersonalSettingsRoute
    }
    '/_restrict_login_signup/login/': {
      id: '/_restrict_login_signup/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof RestrictloginsignupLoginIndexImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/signup/': {
      id: '/_restrict_login_signup/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof RestrictloginsignupSignupIndexImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/login/provider/error': {
      id: '/_restrict_login_signup/login/provider/error'
      path: '/login/provider/error'
      fullPath: '/login/provider/error'
      preLoaderRoute: typeof RestrictloginsignupLoginProviderErrorImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/login/provider/success': {
      id: '/_restrict_login_signup/login/provider/success'
      path: '/login/provider/success'
      fullPath: '/login/provider/success'
      preLoaderRoute: typeof RestrictloginsignupLoginProviderSuccessImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_authenticate/personal-settings/_personal-settings-layout/': {
      id: '/_authenticate/personal-settings/_personal-settings-layout/'
      path: '/'
      fullPath: '/personal-settings/'
      preLoaderRoute: typeof authenticatePersonalSettingsIndexImport
      parentRoute: typeof authenticatePersonalSettingsLayoutImport
    }
    '/_restrict_login_signup/login/ldap/': {
      id: '/_restrict_login_signup/login/ldap/'
      path: '/login/ldap'
      fullPath: '/login/ldap'
      preLoaderRoute: typeof RestrictloginsignupLoginLdapIndexImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/login/select-organization/': {
      id: '/_restrict_login_signup/login/select-organization/'
      path: '/login/select-organization'
      fullPath: '/login/select-organization'
      preLoaderRoute: typeof RestrictloginsignupLoginSelectOrganizationIndexImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/login/sso/': {
      id: '/_restrict_login_signup/login/sso/'
      path: '/login/sso'
      fullPath: '/login/sso'
      preLoaderRoute: typeof RestrictloginsignupLoginSsoIndexImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_restrict_login_signup/signup/sso/': {
      id: '/_restrict_login_signup/signup/sso/'
      path: '/signup/sso'
      fullPath: '/signup/sso'
      preLoaderRoute: typeof RestrictloginsignupSignupSsoIndexImport
      parentRoute: typeof RestrictloginsignupImport
    }
    '/_authenticate/_org_details/_org-layout/organization/': {
      id: '/_authenticate/_org_details/_org-layout/organization/'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/none/': {
      id: '/_authenticate/_org_details/_org-layout/organization/none/'
      path: '/organization/none'
      fullPath: '/organization/none'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationNoneIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/cert-manager/overview': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/cert-manager/overview'
      path: '/organization/$organizationId/cert-manager/overview'
      fullPath: '/organization/$organizationId/cert-manager/overview'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/kms/overview': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/kms/overview'
      path: '/organization/$organizationId/kms/overview'
      fullPath: '/organization/$organizationId/kms/overview'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-manager/overview': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-manager/overview'
      path: '/organization/$organizationId/secret-manager/overview'
      fullPath: '/organization/$organizationId/secret-manager/overview'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/admin/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/admin/'
      path: '/organization/$organizationId/admin'
      fullPath: '/organization/$organizationId/admin'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdAdminIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/audit-logs/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/audit-logs/'
      path: '/organization/$organizationId/audit-logs'
      fullPath: '/organization/$organizationId/audit-logs'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/billing/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/billing/'
      path: '/organization/$organizationId/billing'
      fullPath: '/organization/$organizationId/billing'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdBillingIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/members/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/members/'
      path: '/organization/$organizationId/members'
      fullPath: '/organization/$organizationId/members'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdMembersIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/overview/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/overview/'
      path: '/organization/$organizationId/overview'
      fullPath: '/organization/$organizationId/overview'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-scanning/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-scanning/'
      path: '/organization/$organizationId/secret-scanning'
      fullPath: '/organization/$organizationId/secret-scanning'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-sharing/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-sharing/'
      path: '/organization/$organizationId/secret-sharing'
      fullPath: '/organization/$organizationId/secret-sharing'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/settings/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/settings/'
      path: '/organization/$organizationId/settings'
      fullPath: '/organization/$organizationId/settings'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/groups/$groupId/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/groups/$groupId/'
      path: '/organization/$organizationId/groups/$groupId'
      fullPath: '/organization/$organizationId/groups/$groupId'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/identities/$identityId/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/identities/$identityId/'
      path: '/organization/$organizationId/identities/$identityId'
      fullPath: '/organization/$organizationId/identities/$identityId'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/memberships/$membershipId/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/memberships/$membershipId/'
      path: '/organization/$organizationId/memberships/$membershipId'
      fullPath: '/organization/$organizationId/memberships/$membershipId'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
    '/_authenticate/_org_details/_org-layout/organization/$organizationId/roles/$roleId/': {
      id: '/_authenticate/_org_details/_org-layout/organization/$organizationId/roles/$roleId/'
      path: '/organization/$organizationId/roles/$roleId'
      fullPath: '/organization/$organizationId/roles/$roleId'
      preLoaderRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexImport
      parentRoute: typeof authenticateOrgdetailsLayoutImport
    }
  }
}

// Create and export the route tree

interface authenticateOrgdetailsLayoutRouteChildren {
  authenticateOrgdetailsOrganizationIndexRoute: typeof authenticateOrgdetailsOrganizationIndexRoute
  authenticateOrgdetailsOrganizationNoneIndexRoute: typeof authenticateOrgdetailsOrganizationNoneIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute
  authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute
  authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute
  authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute
  authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute: typeof authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute
}

const authenticateOrgdetailsLayoutRouteChildren: authenticateOrgdetailsLayoutRouteChildren =
  {
    authenticateOrgdetailsOrganizationIndexRoute:
      authenticateOrgdetailsOrganizationIndexRoute,
    authenticateOrgdetailsOrganizationNoneIndexRoute:
      authenticateOrgdetailsOrganizationNoneIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute:
      authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute,
    authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute:
      authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute,
    authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute:
      authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute,
    authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute,
    authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute:
      authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute,
  }

const authenticateOrgdetailsLayoutRouteWithChildren =
  authenticateOrgdetailsLayoutRoute._addFileChildren(
    authenticateOrgdetailsLayoutRouteChildren,
  )

interface AuthenticateOrgdetailsRouteChildren {
  authenticateOrgdetailsLayoutRoute: typeof authenticateOrgdetailsLayoutRouteWithChildren
}

const AuthenticateOrgdetailsRouteChildren: AuthenticateOrgdetailsRouteChildren =
  {
    authenticateOrgdetailsLayoutRoute:
      authenticateOrgdetailsLayoutRouteWithChildren,
  }

const AuthenticateOrgdetailsRouteWithChildren =
  AuthenticateOrgdetailsRoute._addFileChildren(
    AuthenticateOrgdetailsRouteChildren,
  )

interface authenticatePersonalSettingsLayoutRouteChildren {
  authenticatePersonalSettingsIndexRoute: typeof authenticatePersonalSettingsIndexRoute
}

const authenticatePersonalSettingsLayoutRouteChildren: authenticatePersonalSettingsLayoutRouteChildren =
  {
    authenticatePersonalSettingsIndexRoute:
      authenticatePersonalSettingsIndexRoute,
  }

const authenticatePersonalSettingsLayoutRouteWithChildren =
  authenticatePersonalSettingsLayoutRoute._addFileChildren(
    authenticatePersonalSettingsLayoutRouteChildren,
  )

interface AuthenticatePersonalSettingsRouteChildren {
  authenticatePersonalSettingsLayoutRoute: typeof authenticatePersonalSettingsLayoutRouteWithChildren
}

const AuthenticatePersonalSettingsRouteChildren: AuthenticatePersonalSettingsRouteChildren =
  {
    authenticatePersonalSettingsLayoutRoute:
      authenticatePersonalSettingsLayoutRouteWithChildren,
  }

const AuthenticatePersonalSettingsRouteWithChildren =
  AuthenticatePersonalSettingsRoute._addFileChildren(
    AuthenticatePersonalSettingsRouteChildren,
  )

interface AuthenticateRouteChildren {
  AuthenticateOrgdetailsRoute: typeof AuthenticateOrgdetailsRouteWithChildren
  AuthenticateCliRedirectRoute: typeof AuthenticateCliRedirectRoute
  AuthenticatePersonalSettingsRoute: typeof AuthenticatePersonalSettingsRouteWithChildren
}

const AuthenticateRouteChildren: AuthenticateRouteChildren = {
  AuthenticateOrgdetailsRoute: AuthenticateOrgdetailsRouteWithChildren,
  AuthenticateCliRedirectRoute: AuthenticateCliRedirectRoute,
  AuthenticatePersonalSettingsRoute:
    AuthenticatePersonalSettingsRouteWithChildren,
}

const AuthenticateRouteWithChildren = AuthenticateRoute._addFileChildren(
  AuthenticateRouteChildren,
)

interface RestrictloginsignupRouteChildren {
  RestrictloginsignupEmailNotVerifiedRoute: typeof RestrictloginsignupEmailNotVerifiedRoute
  RestrictloginsignupPasswordResetRoute: typeof RestrictloginsignupPasswordResetRoute
  RestrictloginsignupRequestnewinviteRoute: typeof RestrictloginsignupRequestnewinviteRoute
  RestrictloginsignupSignupinviteRoute: typeof RestrictloginsignupSignupinviteRoute
  RestrictloginsignupVerifyEmailRoute: typeof RestrictloginsignupVerifyEmailRoute
  RestrictloginsignupLoginIndexRoute: typeof RestrictloginsignupLoginIndexRoute
  RestrictloginsignupSignupIndexRoute: typeof RestrictloginsignupSignupIndexRoute
  RestrictloginsignupLoginProviderErrorRoute: typeof RestrictloginsignupLoginProviderErrorRoute
  RestrictloginsignupLoginProviderSuccessRoute: typeof RestrictloginsignupLoginProviderSuccessRoute
  RestrictloginsignupLoginLdapIndexRoute: typeof RestrictloginsignupLoginLdapIndexRoute
  RestrictloginsignupLoginSelectOrganizationIndexRoute: typeof RestrictloginsignupLoginSelectOrganizationIndexRoute
  RestrictloginsignupLoginSsoIndexRoute: typeof RestrictloginsignupLoginSsoIndexRoute
  RestrictloginsignupSignupSsoIndexRoute: typeof RestrictloginsignupSignupSsoIndexRoute
}

const RestrictloginsignupRouteChildren: RestrictloginsignupRouteChildren = {
  RestrictloginsignupEmailNotVerifiedRoute:
    RestrictloginsignupEmailNotVerifiedRoute,
  RestrictloginsignupPasswordResetRoute: RestrictloginsignupPasswordResetRoute,
  RestrictloginsignupRequestnewinviteRoute:
    RestrictloginsignupRequestnewinviteRoute,
  RestrictloginsignupSignupinviteRoute: RestrictloginsignupSignupinviteRoute,
  RestrictloginsignupVerifyEmailRoute: RestrictloginsignupVerifyEmailRoute,
  RestrictloginsignupLoginIndexRoute: RestrictloginsignupLoginIndexRoute,
  RestrictloginsignupSignupIndexRoute: RestrictloginsignupSignupIndexRoute,
  RestrictloginsignupLoginProviderErrorRoute:
    RestrictloginsignupLoginProviderErrorRoute,
  RestrictloginsignupLoginProviderSuccessRoute:
    RestrictloginsignupLoginProviderSuccessRoute,
  RestrictloginsignupLoginLdapIndexRoute:
    RestrictloginsignupLoginLdapIndexRoute,
  RestrictloginsignupLoginSelectOrganizationIndexRoute:
    RestrictloginsignupLoginSelectOrganizationIndexRoute,
  RestrictloginsignupLoginSsoIndexRoute: RestrictloginsignupLoginSsoIndexRoute,
  RestrictloginsignupSignupSsoIndexRoute:
    RestrictloginsignupSignupSsoIndexRoute,
}

const RestrictloginsignupRouteWithChildren =
  RestrictloginsignupRoute._addFileChildren(RestrictloginsignupRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof authenticateOrgdetailsLayoutRouteWithChildren
  '/cli-redirect': typeof AuthenticateCliRedirectRoute
  '/email-not-verified': typeof RestrictloginsignupEmailNotVerifiedRoute
  '/password-reset': typeof RestrictloginsignupPasswordResetRoute
  '/requestnewinvite': typeof RestrictloginsignupRequestnewinviteRoute
  '/signupinvite': typeof RestrictloginsignupSignupinviteRoute
  '/verify-email': typeof RestrictloginsignupVerifyEmailRoute
  '/personal-settings': typeof authenticatePersonalSettingsLayoutRouteWithChildren
  '/login': typeof RestrictloginsignupLoginIndexRoute
  '/signup': typeof RestrictloginsignupSignupIndexRoute
  '/login/provider/error': typeof RestrictloginsignupLoginProviderErrorRoute
  '/login/provider/success': typeof RestrictloginsignupLoginProviderSuccessRoute
  '/personal-settings/': typeof authenticatePersonalSettingsIndexRoute
  '/login/ldap': typeof RestrictloginsignupLoginLdapIndexRoute
  '/login/select-organization': typeof RestrictloginsignupLoginSelectOrganizationIndexRoute
  '/login/sso': typeof RestrictloginsignupLoginSsoIndexRoute
  '/signup/sso': typeof RestrictloginsignupSignupSsoIndexRoute
  '/organization': typeof authenticateOrgdetailsOrganizationIndexRoute
  '/organization/none': typeof authenticateOrgdetailsOrganizationNoneIndexRoute
  '/organization/$organizationId/cert-manager/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute
  '/organization/$organizationId/kms/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute
  '/organization/$organizationId/secret-manager/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute
  '/organization/$organizationId/admin': typeof authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute
  '/organization/$organizationId/audit-logs': typeof authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute
  '/organization/$organizationId/billing': typeof authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute
  '/organization/$organizationId/members': typeof authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute
  '/organization/$organizationId/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute
  '/organization/$organizationId/secret-scanning': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute
  '/organization/$organizationId/secret-sharing': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute
  '/organization/$organizationId/settings': typeof authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute
  '/organization/$organizationId/groups/$groupId': typeof authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute
  '/organization/$organizationId/identities/$identityId': typeof authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute
  '/organization/$organizationId/memberships/$membershipId': typeof authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute
  '/organization/$organizationId/roles/$roleId': typeof authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof authenticateOrgdetailsLayoutRouteWithChildren
  '/cli-redirect': typeof AuthenticateCliRedirectRoute
  '/email-not-verified': typeof RestrictloginsignupEmailNotVerifiedRoute
  '/password-reset': typeof RestrictloginsignupPasswordResetRoute
  '/requestnewinvite': typeof RestrictloginsignupRequestnewinviteRoute
  '/signupinvite': typeof RestrictloginsignupSignupinviteRoute
  '/verify-email': typeof RestrictloginsignupVerifyEmailRoute
  '/personal-settings': typeof authenticatePersonalSettingsIndexRoute
  '/login': typeof RestrictloginsignupLoginIndexRoute
  '/signup': typeof RestrictloginsignupSignupIndexRoute
  '/login/provider/error': typeof RestrictloginsignupLoginProviderErrorRoute
  '/login/provider/success': typeof RestrictloginsignupLoginProviderSuccessRoute
  '/login/ldap': typeof RestrictloginsignupLoginLdapIndexRoute
  '/login/select-organization': typeof RestrictloginsignupLoginSelectOrganizationIndexRoute
  '/login/sso': typeof RestrictloginsignupLoginSsoIndexRoute
  '/signup/sso': typeof RestrictloginsignupSignupSsoIndexRoute
  '/organization': typeof authenticateOrgdetailsOrganizationIndexRoute
  '/organization/none': typeof authenticateOrgdetailsOrganizationNoneIndexRoute
  '/organization/$organizationId/cert-manager/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute
  '/organization/$organizationId/kms/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute
  '/organization/$organizationId/secret-manager/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute
  '/organization/$organizationId/admin': typeof authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute
  '/organization/$organizationId/audit-logs': typeof authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute
  '/organization/$organizationId/billing': typeof authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute
  '/organization/$organizationId/members': typeof authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute
  '/organization/$organizationId/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute
  '/organization/$organizationId/secret-scanning': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute
  '/organization/$organizationId/secret-sharing': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute
  '/organization/$organizationId/settings': typeof authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute
  '/organization/$organizationId/groups/$groupId': typeof authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute
  '/organization/$organizationId/identities/$identityId': typeof authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute
  '/organization/$organizationId/memberships/$membershipId': typeof authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute
  '/organization/$organizationId/roles/$roleId': typeof authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticate': typeof AuthenticateRouteWithChildren
  '/_restrict_login_signup': typeof RestrictloginsignupRouteWithChildren
  '/_authenticate/_org_details': typeof AuthenticateOrgdetailsRouteWithChildren
  '/_authenticate/cli-redirect': typeof AuthenticateCliRedirectRoute
  '/_restrict_login_signup/email-not-verified': typeof RestrictloginsignupEmailNotVerifiedRoute
  '/_restrict_login_signup/password-reset': typeof RestrictloginsignupPasswordResetRoute
  '/_restrict_login_signup/requestnewinvite': typeof RestrictloginsignupRequestnewinviteRoute
  '/_restrict_login_signup/signupinvite': typeof RestrictloginsignupSignupinviteRoute
  '/_restrict_login_signup/verify-email': typeof RestrictloginsignupVerifyEmailRoute
  '/_authenticate/_org_details/_org-layout': typeof authenticateOrgdetailsLayoutRouteWithChildren
  '/_authenticate/personal-settings': typeof AuthenticatePersonalSettingsRouteWithChildren
  '/_authenticate/personal-settings/_personal-settings-layout': typeof authenticatePersonalSettingsLayoutRouteWithChildren
  '/_restrict_login_signup/login/': typeof RestrictloginsignupLoginIndexRoute
  '/_restrict_login_signup/signup/': typeof RestrictloginsignupSignupIndexRoute
  '/_restrict_login_signup/login/provider/error': typeof RestrictloginsignupLoginProviderErrorRoute
  '/_restrict_login_signup/login/provider/success': typeof RestrictloginsignupLoginProviderSuccessRoute
  '/_authenticate/personal-settings/_personal-settings-layout/': typeof authenticatePersonalSettingsIndexRoute
  '/_restrict_login_signup/login/ldap/': typeof RestrictloginsignupLoginLdapIndexRoute
  '/_restrict_login_signup/login/select-organization/': typeof RestrictloginsignupLoginSelectOrganizationIndexRoute
  '/_restrict_login_signup/login/sso/': typeof RestrictloginsignupLoginSsoIndexRoute
  '/_restrict_login_signup/signup/sso/': typeof RestrictloginsignupSignupSsoIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/': typeof authenticateOrgdetailsOrganizationIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/none/': typeof authenticateOrgdetailsOrganizationNoneIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/cert-manager/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdCertManagerOverviewRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/kms/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdKmsOverviewRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-manager/overview': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretManagerOverviewRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/admin/': typeof authenticateOrgdetailsOrganizationOrganizationIdAdminIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/audit-logs/': typeof authenticateOrgdetailsOrganizationOrganizationIdAuditLogsIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/billing/': typeof authenticateOrgdetailsOrganizationOrganizationIdBillingIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/members/': typeof authenticateOrgdetailsOrganizationOrganizationIdMembersIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/overview/': typeof authenticateOrgdetailsOrganizationOrganizationIdOverviewIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-scanning/': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretScanningIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-sharing/': typeof authenticateOrgdetailsOrganizationOrganizationIdSecretSharingIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/settings/': typeof authenticateOrgdetailsOrganizationOrganizationIdSettingsIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/groups/$groupId/': typeof authenticateOrgdetailsOrganizationOrganizationIdGroupsGroupIdIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/identities/$identityId/': typeof authenticateOrgdetailsOrganizationOrganizationIdIdentitiesIdentityIdIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/memberships/$membershipId/': typeof authenticateOrgdetailsOrganizationOrganizationIdMembershipsMembershipIdIndexRoute
  '/_authenticate/_org_details/_org-layout/organization/$organizationId/roles/$roleId/': typeof authenticateOrgdetailsOrganizationOrganizationIdRolesRoleIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/cli-redirect'
    | '/email-not-verified'
    | '/password-reset'
    | '/requestnewinvite'
    | '/signupinvite'
    | '/verify-email'
    | '/personal-settings'
    | '/login'
    | '/signup'
    | '/login/provider/error'
    | '/login/provider/success'
    | '/personal-settings/'
    | '/login/ldap'
    | '/login/select-organization'
    | '/login/sso'
    | '/signup/sso'
    | '/organization'
    | '/organization/none'
    | '/organization/$organizationId/cert-manager/overview'
    | '/organization/$organizationId/kms/overview'
    | '/organization/$organizationId/secret-manager/overview'
    | '/organization/$organizationId/admin'
    | '/organization/$organizationId/audit-logs'
    | '/organization/$organizationId/billing'
    | '/organization/$organizationId/members'
    | '/organization/$organizationId/overview'
    | '/organization/$organizationId/secret-scanning'
    | '/organization/$organizationId/secret-sharing'
    | '/organization/$organizationId/settings'
    | '/organization/$organizationId/groups/$groupId'
    | '/organization/$organizationId/identities/$identityId'
    | '/organization/$organizationId/memberships/$membershipId'
    | '/organization/$organizationId/roles/$roleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/cli-redirect'
    | '/email-not-verified'
    | '/password-reset'
    | '/requestnewinvite'
    | '/signupinvite'
    | '/verify-email'
    | '/personal-settings'
    | '/login'
    | '/signup'
    | '/login/provider/error'
    | '/login/provider/success'
    | '/login/ldap'
    | '/login/select-organization'
    | '/login/sso'
    | '/signup/sso'
    | '/organization'
    | '/organization/none'
    | '/organization/$organizationId/cert-manager/overview'
    | '/organization/$organizationId/kms/overview'
    | '/organization/$organizationId/secret-manager/overview'
    | '/organization/$organizationId/admin'
    | '/organization/$organizationId/audit-logs'
    | '/organization/$organizationId/billing'
    | '/organization/$organizationId/members'
    | '/organization/$organizationId/overview'
    | '/organization/$organizationId/secret-scanning'
    | '/organization/$organizationId/secret-sharing'
    | '/organization/$organizationId/settings'
    | '/organization/$organizationId/groups/$groupId'
    | '/organization/$organizationId/identities/$identityId'
    | '/organization/$organizationId/memberships/$membershipId'
    | '/organization/$organizationId/roles/$roleId'
  id:
    | '__root__'
    | '/'
    | '/_authenticate'
    | '/_restrict_login_signup'
    | '/_authenticate/_org_details'
    | '/_authenticate/cli-redirect'
    | '/_restrict_login_signup/email-not-verified'
    | '/_restrict_login_signup/password-reset'
    | '/_restrict_login_signup/requestnewinvite'
    | '/_restrict_login_signup/signupinvite'
    | '/_restrict_login_signup/verify-email'
    | '/_authenticate/_org_details/_org-layout'
    | '/_authenticate/personal-settings'
    | '/_authenticate/personal-settings/_personal-settings-layout'
    | '/_restrict_login_signup/login/'
    | '/_restrict_login_signup/signup/'
    | '/_restrict_login_signup/login/provider/error'
    | '/_restrict_login_signup/login/provider/success'
    | '/_authenticate/personal-settings/_personal-settings-layout/'
    | '/_restrict_login_signup/login/ldap/'
    | '/_restrict_login_signup/login/select-organization/'
    | '/_restrict_login_signup/login/sso/'
    | '/_restrict_login_signup/signup/sso/'
    | '/_authenticate/_org_details/_org-layout/organization/'
    | '/_authenticate/_org_details/_org-layout/organization/none/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/cert-manager/overview'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/kms/overview'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-manager/overview'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/admin/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/audit-logs/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/billing/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/members/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/overview/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-scanning/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-sharing/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/settings/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/groups/$groupId/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/identities/$identityId/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/memberships/$membershipId/'
    | '/_authenticate/_org_details/_org-layout/organization/$organizationId/roles/$roleId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticateRoute: typeof AuthenticateRouteWithChildren
  RestrictloginsignupRoute: typeof RestrictloginsignupRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticateRoute: AuthenticateRouteWithChildren,
  RestrictloginsignupRoute: RestrictloginsignupRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticate",
        "/_restrict_login_signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticate": {
      "filePath": "_authenticate.tsx",
      "children": [
        "/_authenticate/_org_details",
        "/_authenticate/cli-redirect",
        "/_authenticate/personal-settings"
      ]
    },
    "/_restrict_login_signup": {
      "filePath": "_restrict_login_signup.tsx",
      "children": [
        "/_restrict_login_signup/email-not-verified",
        "/_restrict_login_signup/password-reset",
        "/_restrict_login_signup/requestnewinvite",
        "/_restrict_login_signup/signupinvite",
        "/_restrict_login_signup/verify-email",
        "/_restrict_login_signup/login/",
        "/_restrict_login_signup/signup/",
        "/_restrict_login_signup/login/provider/error",
        "/_restrict_login_signup/login/provider/success",
        "/_restrict_login_signup/login/ldap/",
        "/_restrict_login_signup/login/select-organization/",
        "/_restrict_login_signup/login/sso/",
        "/_restrict_login_signup/signup/sso/"
      ]
    },
    "/_authenticate/_org_details": {
      "filePath": "_authenticate/_org_details.tsx",
      "parent": "/_authenticate",
      "children": [
        "/_authenticate/_org_details/_org-layout"
      ]
    },
    "/_authenticate/cli-redirect": {
      "filePath": "_authenticate/cli-redirect.tsx",
      "parent": "/_authenticate"
    },
    "/_restrict_login_signup/email-not-verified": {
      "filePath": "_restrict_login_signup/email-not-verified.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/password-reset": {
      "filePath": "_restrict_login_signup/password-reset.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/requestnewinvite": {
      "filePath": "_restrict_login_signup/requestnewinvite.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/signupinvite": {
      "filePath": "_restrict_login_signup/signupinvite.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/verify-email": {
      "filePath": "_restrict_login_signup/verify-email.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_authenticate/_org_details/_org-layout": {
      "filePath": "_authenticate/_org_details/layout.tsx",
      "parent": "/_authenticate/_org_details",
      "children": [
        "/_authenticate/_org_details/_org-layout/organization/",
        "/_authenticate/_org_details/_org-layout/organization/none/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/cert-manager/overview",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/kms/overview",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-manager/overview",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/admin/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/audit-logs/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/billing/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/members/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/overview/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-scanning/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-sharing/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/settings/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/groups/$groupId/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/identities/$identityId/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/memberships/$membershipId/",
        "/_authenticate/_org_details/_org-layout/organization/$organizationId/roles/$roleId/"
      ]
    },
    "/_authenticate/personal-settings": {
      "filePath": "_authenticate/personal-settings",
      "parent": "/_authenticate",
      "children": [
        "/_authenticate/personal-settings/_personal-settings-layout"
      ]
    },
    "/_authenticate/personal-settings/_personal-settings-layout": {
      "filePath": "_authenticate/personal-settings/layout.tsx",
      "parent": "/_authenticate/personal-settings",
      "children": [
        "/_authenticate/personal-settings/_personal-settings-layout/"
      ]
    },
    "/_restrict_login_signup/login/": {
      "filePath": "_restrict_login_signup/login/index.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/signup/": {
      "filePath": "_restrict_login_signup/signup/index.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/login/provider/error": {
      "filePath": "_restrict_login_signup/login/provider/error.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/login/provider/success": {
      "filePath": "_restrict_login_signup/login/provider/success.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_authenticate/personal-settings/_personal-settings-layout/": {
      "filePath": "_authenticate/personal-settings/index.tsx",
      "parent": "/_authenticate/personal-settings/_personal-settings-layout"
    },
    "/_restrict_login_signup/login/ldap/": {
      "filePath": "_restrict_login_signup/login/ldap/index.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/login/select-organization/": {
      "filePath": "_restrict_login_signup/login/select-organization/index.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/login/sso/": {
      "filePath": "_restrict_login_signup/login/sso/index.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_restrict_login_signup/signup/sso/": {
      "filePath": "_restrict_login_signup/signup/sso/index.tsx",
      "parent": "/_restrict_login_signup"
    },
    "/_authenticate/_org_details/_org-layout/organization/": {
      "filePath": "_authenticate/_org_details/organization/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/none/": {
      "filePath": "_authenticate/_org_details/organization/none/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/cert-manager/overview": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/cert-manager/overview.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/kms/overview": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/kms/overview.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-manager/overview": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/secret-manager/overview.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/admin/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/admin/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/audit-logs/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/audit-logs/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/billing/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/billing/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/members/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/members/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/overview/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/overview/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-scanning/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/secret-scanning/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/secret-sharing/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/secret-sharing/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/settings/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/settings/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/groups/$groupId/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/groups/$groupId/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/identities/$identityId/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/identities/$identityId/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/memberships/$membershipId/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/memberships/$membershipId/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    },
    "/_authenticate/_org_details/_org-layout/organization/$organizationId/roles/$roleId/": {
      "filePath": "_authenticate/_org_details/organization/$organizationId/roles/$roleId/index.tsx",
      "parent": "/_authenticate/_org_details/_org-layout"
    }
  }
}
ROUTE_MANIFEST_END */
