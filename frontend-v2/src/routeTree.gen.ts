/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RestrictLoginSignupImport } from './routes/_restrict-login-signup'
import { Route as AuthenticateImport } from './routes/_authenticate'
import { Route as IndexImport } from './routes/index'
import { Route as RestrictLoginSignupVerifyEmailImport } from './routes/_restrict-login-signup/verify-email'
import { Route as RestrictLoginSignupSignupinviteImport } from './routes/_restrict-login-signup/signupinvite'
import { Route as RestrictLoginSignupRequestnewinviteImport } from './routes/_restrict-login-signup/requestnewinvite'
import { Route as RestrictLoginSignupPasswordResetImport } from './routes/_restrict-login-signup/password-reset'
import { Route as RestrictLoginSignupEmailNotVerifiedImport } from './routes/_restrict-login-signup/email-not-verified'
import { Route as AuthenticateCliRedirectImport } from './routes/_authenticate/cli-redirect'
import { Route as AuthenticateCtxOrgDetailsImport } from './routes/_authenticate/_ctx-org-details'
import { Route as RestrictLoginSignupSignupIndexImport } from './routes/_restrict-login-signup/signup/index'
import { Route as RestrictLoginSignupLoginIndexImport } from './routes/_restrict-login-signup/login/index'
import { Route as authenticatePersonalSettingsLayoutImport } from './routes/_authenticate/personal-settings/layout'
import { Route as RestrictLoginSignupSignupSsoIndexImport } from './routes/_restrict-login-signup/signup/sso/index'
import { Route as RestrictLoginSignupLoginSsoIndexImport } from './routes/_restrict-login-signup/login/sso/index'
import { Route as RestrictLoginSignupLoginSelectOrganizationIndexImport } from './routes/_restrict-login-signup/login/select-organization/index'
import { Route as RestrictLoginSignupLoginLdapIndexImport } from './routes/_restrict-login-signup/login/ldap/index'
import { Route as authenticatePersonalSettingsIndexImport } from './routes/_authenticate/personal-settings/index'
import { Route as RestrictLoginSignupLoginProviderSuccessImport } from './routes/_restrict-login-signup/login/provider/success'
import { Route as RestrictLoginSignupLoginProviderErrorImport } from './routes/_restrict-login-signup/login/provider/error'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/index'
import { Route as AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerImport } from './routes/_authenticate/_ctx-org-details/secret-manager.$projectId/_layout-secret-manager'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/none/index'
import { Route as AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewImport } from './routes/_authenticate/_ctx-org-details/secret-manager.$projectId/_layout-secret-manager/overview'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/index'
import { Route as AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexImport } from './routes/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/index'

// Create Virtual Routes

const AuthenticatePersonalSettingsImport = createFileRoute(
  '/_authenticate/personal-settings',
)()
const AuthenticateCtxOrgDetailsOrganizationImport = createFileRoute(
  '/_authenticate/_ctx-org-details/organization',
)()
const AuthenticateCtxOrgDetailsSecretManagerProjectIdImport = createFileRoute(
  '/_authenticate/_ctx-org-details/secret-manager/$projectId',
)()

// Create/Update Routes

const RestrictLoginSignupRoute = RestrictLoginSignupImport.update({
  id: '/_restrict-login-signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticateRoute = AuthenticateImport.update({
  id: '/_authenticate',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatePersonalSettingsRoute =
  AuthenticatePersonalSettingsImport.update({
    id: '/personal-settings',
    path: '/personal-settings',
    getParentRoute: () => AuthenticateRoute,
  } as any)

const RestrictLoginSignupVerifyEmailRoute =
  RestrictLoginSignupVerifyEmailImport.update({
    id: '/verify-email',
    path: '/verify-email',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupSignupinviteRoute =
  RestrictLoginSignupSignupinviteImport.update({
    id: '/signupinvite',
    path: '/signupinvite',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupRequestnewinviteRoute =
  RestrictLoginSignupRequestnewinviteImport.update({
    id: '/requestnewinvite',
    path: '/requestnewinvite',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupPasswordResetRoute =
  RestrictLoginSignupPasswordResetImport.update({
    id: '/password-reset',
    path: '/password-reset',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupEmailNotVerifiedRoute =
  RestrictLoginSignupEmailNotVerifiedImport.update({
    id: '/email-not-verified',
    path: '/email-not-verified',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const AuthenticateCliRedirectRoute = AuthenticateCliRedirectImport.update({
  id: '/cli-redirect',
  path: '/cli-redirect',
  getParentRoute: () => AuthenticateRoute,
} as any)

const AuthenticateCtxOrgDetailsRoute = AuthenticateCtxOrgDetailsImport.update({
  id: '/_ctx-org-details',
  getParentRoute: () => AuthenticateRoute,
} as any)

const AuthenticateCtxOrgDetailsOrganizationRoute =
  AuthenticateCtxOrgDetailsOrganizationImport.update({
    id: '/organization',
    path: '/organization',
    getParentRoute: () => AuthenticateCtxOrgDetailsRoute,
  } as any)

const RestrictLoginSignupSignupIndexRoute =
  RestrictLoginSignupSignupIndexImport.update({
    id: '/signup/',
    path: '/signup/',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupLoginIndexRoute =
  RestrictLoginSignupLoginIndexImport.update({
    id: '/login/',
    path: '/login/',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const authenticatePersonalSettingsLayoutRoute =
  authenticatePersonalSettingsLayoutImport.update({
    id: '/_personal-settings-layout',
    getParentRoute: () => AuthenticatePersonalSettingsRoute,
  } as any)

const AuthenticateCtxOrgDetailsSecretManagerProjectIdRoute =
  AuthenticateCtxOrgDetailsSecretManagerProjectIdImport.update({
    id: '/secret-manager/$projectId',
    path: '/secret-manager/$projectId',
    getParentRoute: () => AuthenticateCtxOrgDetailsRoute,
  } as any)

const RestrictLoginSignupSignupSsoIndexRoute =
  RestrictLoginSignupSignupSsoIndexImport.update({
    id: '/signup/sso/',
    path: '/signup/sso/',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupLoginSsoIndexRoute =
  RestrictLoginSignupLoginSsoIndexImport.update({
    id: '/login/sso/',
    path: '/login/sso/',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupLoginSelectOrganizationIndexRoute =
  RestrictLoginSignupLoginSelectOrganizationIndexImport.update({
    id: '/login/select-organization/',
    path: '/login/select-organization/',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupLoginLdapIndexRoute =
  RestrictLoginSignupLoginLdapIndexImport.update({
    id: '/login/ldap/',
    path: '/login/ldap/',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const authenticatePersonalSettingsIndexRoute =
  authenticatePersonalSettingsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authenticatePersonalSettingsLayoutRoute,
  } as any)

const RestrictLoginSignupLoginProviderSuccessRoute =
  RestrictLoginSignupLoginProviderSuccessImport.update({
    id: '/login/provider/success',
    path: '/login/provider/success',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const RestrictLoginSignupLoginProviderErrorRoute =
  RestrictLoginSignupLoginProviderErrorImport.update({
    id: '/login/provider/error',
    path: '/login/provider/error',
    getParentRoute: () => RestrictLoginSignupRoute,
  } as any)

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport.update({
    id: '/_layout-org',
    getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationRoute,
  } as any)

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
  } as any)

const AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRoute =
  AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerImport.update(
    {
      id: '/_layout-secret-manager',
      getParentRoute: () =>
        AuthenticateCtxOrgDetailsSecretManagerProjectIdRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexImport.update({
    id: '/none/',
    path: '/none/',
    getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
  } as any)

const AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute =
  AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewImport.update(
    {
      id: '/overview',
      path: '/overview',
      getParentRoute: () =>
        AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexImport.update(
    {
      id: '/$organizationId/settings/',
      path: '/$organizationId/settings/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexImport.update(
    {
      id: '/$organizationId/secret-sharing/',
      path: '/$organizationId/secret-sharing/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexImport.update(
    {
      id: '/$organizationId/secret-scanning/',
      path: '/$organizationId/secret-scanning/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexImport.update(
    {
      id: '/$organizationId/overview/',
      path: '/$organizationId/overview/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexImport.update(
    {
      id: '/$organizationId/members/',
      path: '/$organizationId/members/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexImport.update(
    {
      id: '/$organizationId/billing/',
      path: '/$organizationId/billing/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexImport.update(
    {
      id: '/$organizationId/audit-logs/',
      path: '/$organizationId/audit-logs/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexImport.update(
    {
      id: '/$organizationId/admin/',
      path: '/$organizationId/admin/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewImport.update(
    {
      id: '/$organizationId/secret-manager/overview',
      path: '/$organizationId/secret-manager/overview',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewImport.update(
    {
      id: '/$organizationId/kms/overview',
      path: '/$organizationId/kms/overview',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewImport.update(
    {
      id: '/$organizationId/cert-manager/overview',
      path: '/$organizationId/cert-manager/overview',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexImport.update(
    {
      id: '/$organizationId/roles/$roleId/',
      path: '/$organizationId/roles/$roleId/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexImport.update(
    {
      id: '/$organizationId/memberships/$membershipId/',
      path: '/$organizationId/memberships/$membershipId/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexImport.update(
    {
      id: '/$organizationId/identities/$identityId/',
      path: '/$organizationId/identities/$identityId/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexImport.update(
    {
      id: '/$organizationId/groups/$groupId/',
      path: '/$organizationId/groups/$groupId/',
      getParentRoute: () => AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticate': {
      id: '/_authenticate'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticateImport
      parentRoute: typeof rootRoute
    }
    '/_restrict-login-signup': {
      id: '/_restrict-login-signup'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RestrictLoginSignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticate/_ctx-org-details': {
      id: '/_authenticate/_ctx-org-details'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsImport
      parentRoute: typeof AuthenticateImport
    }
    '/_authenticate/cli-redirect': {
      id: '/_authenticate/cli-redirect'
      path: '/cli-redirect'
      fullPath: '/cli-redirect'
      preLoaderRoute: typeof AuthenticateCliRedirectImport
      parentRoute: typeof AuthenticateImport
    }
    '/_restrict-login-signup/email-not-verified': {
      id: '/_restrict-login-signup/email-not-verified'
      path: '/email-not-verified'
      fullPath: '/email-not-verified'
      preLoaderRoute: typeof RestrictLoginSignupEmailNotVerifiedImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/password-reset': {
      id: '/_restrict-login-signup/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof RestrictLoginSignupPasswordResetImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/requestnewinvite': {
      id: '/_restrict-login-signup/requestnewinvite'
      path: '/requestnewinvite'
      fullPath: '/requestnewinvite'
      preLoaderRoute: typeof RestrictLoginSignupRequestnewinviteImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/signupinvite': {
      id: '/_restrict-login-signup/signupinvite'
      path: '/signupinvite'
      fullPath: '/signupinvite'
      preLoaderRoute: typeof RestrictLoginSignupSignupinviteImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/verify-email': {
      id: '/_restrict-login-signup/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof RestrictLoginSignupVerifyEmailImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_authenticate/personal-settings': {
      id: '/_authenticate/personal-settings'
      path: '/personal-settings'
      fullPath: '/personal-settings'
      preLoaderRoute: typeof AuthenticatePersonalSettingsImport
      parentRoute: typeof AuthenticateImport
    }
    '/_authenticate/personal-settings/_personal-settings-layout': {
      id: '/_authenticate/personal-settings/_personal-settings-layout'
      path: '/personal-settings'
      fullPath: '/personal-settings'
      preLoaderRoute: typeof authenticatePersonalSettingsLayoutImport
      parentRoute: typeof AuthenticatePersonalSettingsRoute
    }
    '/_restrict-login-signup/login/': {
      id: '/_restrict-login-signup/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof RestrictLoginSignupLoginIndexImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/signup/': {
      id: '/_restrict-login-signup/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof RestrictLoginSignupSignupIndexImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_authenticate/_ctx-org-details/organization': {
      id: '/_authenticate/_ctx-org-details/organization'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationImport
      parentRoute: typeof AuthenticateCtxOrgDetailsImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationRoute
    }
    '/_restrict-login-signup/login/provider/error': {
      id: '/_restrict-login-signup/login/provider/error'
      path: '/login/provider/error'
      fullPath: '/login/provider/error'
      preLoaderRoute: typeof RestrictLoginSignupLoginProviderErrorImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/login/provider/success': {
      id: '/_restrict-login-signup/login/provider/success'
      path: '/login/provider/success'
      fullPath: '/login/provider/success'
      preLoaderRoute: typeof RestrictLoginSignupLoginProviderSuccessImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_authenticate/personal-settings/_personal-settings-layout/': {
      id: '/_authenticate/personal-settings/_personal-settings-layout/'
      path: '/'
      fullPath: '/personal-settings/'
      preLoaderRoute: typeof authenticatePersonalSettingsIndexImport
      parentRoute: typeof authenticatePersonalSettingsLayoutImport
    }
    '/_restrict-login-signup/login/ldap/': {
      id: '/_restrict-login-signup/login/ldap/'
      path: '/login/ldap'
      fullPath: '/login/ldap'
      preLoaderRoute: typeof RestrictLoginSignupLoginLdapIndexImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/login/select-organization/': {
      id: '/_restrict-login-signup/login/select-organization/'
      path: '/login/select-organization'
      fullPath: '/login/select-organization'
      preLoaderRoute: typeof RestrictLoginSignupLoginSelectOrganizationIndexImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/login/sso/': {
      id: '/_restrict-login-signup/login/sso/'
      path: '/login/sso'
      fullPath: '/login/sso'
      preLoaderRoute: typeof RestrictLoginSignupLoginSsoIndexImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_restrict-login-signup/signup/sso/': {
      id: '/_restrict-login-signup/signup/sso/'
      path: '/signup/sso'
      fullPath: '/signup/sso'
      preLoaderRoute: typeof RestrictLoginSignupSignupSsoIndexImport
      parentRoute: typeof RestrictLoginSignupImport
    }
    '/_authenticate/_ctx-org-details/secret-manager/$projectId': {
      id: '/_authenticate/_ctx-org-details/secret-manager/$projectId'
      path: '/secret-manager/$projectId'
      fullPath: '/secret-manager/$projectId'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdImport
      parentRoute: typeof AuthenticateCtxOrgDetailsImport
    }
    '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager': {
      id: '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager'
      path: '/secret-manager/$projectId'
      fullPath: '/secret-manager/$projectId'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerImport
      parentRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdRoute
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/'
      path: '/'
      fullPath: '/organization/'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager/overview': {
      id: '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager/overview'
      path: '/overview'
      fullPath: '/secret-manager/$projectId/overview'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewImport
      parentRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/none/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/none/'
      path: '/none'
      fullPath: '/organization/none'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview'
      path: '/$organizationId/cert-manager/overview'
      fullPath: '/organization/$organizationId/cert-manager/overview'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview'
      path: '/$organizationId/kms/overview'
      fullPath: '/organization/$organizationId/kms/overview'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview'
      path: '/$organizationId/secret-manager/overview'
      fullPath: '/organization/$organizationId/secret-manager/overview'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/'
      path: '/$organizationId/admin'
      fullPath: '/organization/$organizationId/admin'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/'
      path: '/$organizationId/audit-logs'
      fullPath: '/organization/$organizationId/audit-logs'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/'
      path: '/$organizationId/billing'
      fullPath: '/organization/$organizationId/billing'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/'
      path: '/$organizationId/members'
      fullPath: '/organization/$organizationId/members'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/'
      path: '/$organizationId/overview'
      fullPath: '/organization/$organizationId/overview'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/'
      path: '/$organizationId/secret-scanning'
      fullPath: '/organization/$organizationId/secret-scanning'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/'
      path: '/$organizationId/secret-sharing'
      fullPath: '/organization/$organizationId/secret-sharing'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/'
      path: '/$organizationId/settings'
      fullPath: '/organization/$organizationId/settings'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/'
      path: '/$organizationId/groups/$groupId'
      fullPath: '/organization/$organizationId/groups/$groupId'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/'
      path: '/$organizationId/identities/$identityId'
      fullPath: '/organization/$organizationId/identities/$identityId'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/'
      path: '/$organizationId/memberships/$membershipId'
      fullPath: '/organization/$organizationId/memberships/$membershipId'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
    '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/': {
      id: '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/'
      path: '/$organizationId/roles/$roleId'
      fullPath: '/organization/$organizationId/roles/$roleId'
      preLoaderRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexImport
      parentRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgImport
    }
  }
}

// Create and export the route tree

interface AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteChildren {
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute
}

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteChildren: AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteChildren =
  {
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute,
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute,
  }

const AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteWithChildren =
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute._addFileChildren(
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteChildren,
  )

interface AuthenticateCtxOrgDetailsOrganizationRouteChildren {
  AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute: typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteWithChildren
}

const AuthenticateCtxOrgDetailsOrganizationRouteChildren: AuthenticateCtxOrgDetailsOrganizationRouteChildren =
  {
    AuthenticateCtxOrgDetailsOrganizationLayoutOrgRoute:
      AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteWithChildren,
  }

const AuthenticateCtxOrgDetailsOrganizationRouteWithChildren =
  AuthenticateCtxOrgDetailsOrganizationRoute._addFileChildren(
    AuthenticateCtxOrgDetailsOrganizationRouteChildren,
  )

interface AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteChildren {
  AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute
}

const AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteChildren: AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteChildren =
  {
    AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute:
      AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute,
  }

const AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteWithChildren =
  AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRoute._addFileChildren(
    AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteChildren,
  )

interface AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteChildren {
  AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteWithChildren
}

const AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteChildren: AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteChildren =
  {
    AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRoute:
      AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteWithChildren,
  }

const AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteWithChildren =
  AuthenticateCtxOrgDetailsSecretManagerProjectIdRoute._addFileChildren(
    AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteChildren,
  )

interface AuthenticateCtxOrgDetailsRouteChildren {
  AuthenticateCtxOrgDetailsOrganizationRoute: typeof AuthenticateCtxOrgDetailsOrganizationRouteWithChildren
  AuthenticateCtxOrgDetailsSecretManagerProjectIdRoute: typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteWithChildren
}

const AuthenticateCtxOrgDetailsRouteChildren: AuthenticateCtxOrgDetailsRouteChildren =
  {
    AuthenticateCtxOrgDetailsOrganizationRoute:
      AuthenticateCtxOrgDetailsOrganizationRouteWithChildren,
    AuthenticateCtxOrgDetailsSecretManagerProjectIdRoute:
      AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteWithChildren,
  }

const AuthenticateCtxOrgDetailsRouteWithChildren =
  AuthenticateCtxOrgDetailsRoute._addFileChildren(
    AuthenticateCtxOrgDetailsRouteChildren,
  )

interface authenticatePersonalSettingsLayoutRouteChildren {
  authenticatePersonalSettingsIndexRoute: typeof authenticatePersonalSettingsIndexRoute
}

const authenticatePersonalSettingsLayoutRouteChildren: authenticatePersonalSettingsLayoutRouteChildren =
  {
    authenticatePersonalSettingsIndexRoute:
      authenticatePersonalSettingsIndexRoute,
  }

const authenticatePersonalSettingsLayoutRouteWithChildren =
  authenticatePersonalSettingsLayoutRoute._addFileChildren(
    authenticatePersonalSettingsLayoutRouteChildren,
  )

interface AuthenticatePersonalSettingsRouteChildren {
  authenticatePersonalSettingsLayoutRoute: typeof authenticatePersonalSettingsLayoutRouteWithChildren
}

const AuthenticatePersonalSettingsRouteChildren: AuthenticatePersonalSettingsRouteChildren =
  {
    authenticatePersonalSettingsLayoutRoute:
      authenticatePersonalSettingsLayoutRouteWithChildren,
  }

const AuthenticatePersonalSettingsRouteWithChildren =
  AuthenticatePersonalSettingsRoute._addFileChildren(
    AuthenticatePersonalSettingsRouteChildren,
  )

interface AuthenticateRouteChildren {
  AuthenticateCtxOrgDetailsRoute: typeof AuthenticateCtxOrgDetailsRouteWithChildren
  AuthenticateCliRedirectRoute: typeof AuthenticateCliRedirectRoute
  AuthenticatePersonalSettingsRoute: typeof AuthenticatePersonalSettingsRouteWithChildren
}

const AuthenticateRouteChildren: AuthenticateRouteChildren = {
  AuthenticateCtxOrgDetailsRoute: AuthenticateCtxOrgDetailsRouteWithChildren,
  AuthenticateCliRedirectRoute: AuthenticateCliRedirectRoute,
  AuthenticatePersonalSettingsRoute:
    AuthenticatePersonalSettingsRouteWithChildren,
}

const AuthenticateRouteWithChildren = AuthenticateRoute._addFileChildren(
  AuthenticateRouteChildren,
)

interface RestrictLoginSignupRouteChildren {
  RestrictLoginSignupEmailNotVerifiedRoute: typeof RestrictLoginSignupEmailNotVerifiedRoute
  RestrictLoginSignupPasswordResetRoute: typeof RestrictLoginSignupPasswordResetRoute
  RestrictLoginSignupRequestnewinviteRoute: typeof RestrictLoginSignupRequestnewinviteRoute
  RestrictLoginSignupSignupinviteRoute: typeof RestrictLoginSignupSignupinviteRoute
  RestrictLoginSignupVerifyEmailRoute: typeof RestrictLoginSignupVerifyEmailRoute
  RestrictLoginSignupLoginIndexRoute: typeof RestrictLoginSignupLoginIndexRoute
  RestrictLoginSignupSignupIndexRoute: typeof RestrictLoginSignupSignupIndexRoute
  RestrictLoginSignupLoginProviderErrorRoute: typeof RestrictLoginSignupLoginProviderErrorRoute
  RestrictLoginSignupLoginProviderSuccessRoute: typeof RestrictLoginSignupLoginProviderSuccessRoute
  RestrictLoginSignupLoginLdapIndexRoute: typeof RestrictLoginSignupLoginLdapIndexRoute
  RestrictLoginSignupLoginSelectOrganizationIndexRoute: typeof RestrictLoginSignupLoginSelectOrganizationIndexRoute
  RestrictLoginSignupLoginSsoIndexRoute: typeof RestrictLoginSignupLoginSsoIndexRoute
  RestrictLoginSignupSignupSsoIndexRoute: typeof RestrictLoginSignupSignupSsoIndexRoute
}

const RestrictLoginSignupRouteChildren: RestrictLoginSignupRouteChildren = {
  RestrictLoginSignupEmailNotVerifiedRoute:
    RestrictLoginSignupEmailNotVerifiedRoute,
  RestrictLoginSignupPasswordResetRoute: RestrictLoginSignupPasswordResetRoute,
  RestrictLoginSignupRequestnewinviteRoute:
    RestrictLoginSignupRequestnewinviteRoute,
  RestrictLoginSignupSignupinviteRoute: RestrictLoginSignupSignupinviteRoute,
  RestrictLoginSignupVerifyEmailRoute: RestrictLoginSignupVerifyEmailRoute,
  RestrictLoginSignupLoginIndexRoute: RestrictLoginSignupLoginIndexRoute,
  RestrictLoginSignupSignupIndexRoute: RestrictLoginSignupSignupIndexRoute,
  RestrictLoginSignupLoginProviderErrorRoute:
    RestrictLoginSignupLoginProviderErrorRoute,
  RestrictLoginSignupLoginProviderSuccessRoute:
    RestrictLoginSignupLoginProviderSuccessRoute,
  RestrictLoginSignupLoginLdapIndexRoute:
    RestrictLoginSignupLoginLdapIndexRoute,
  RestrictLoginSignupLoginSelectOrganizationIndexRoute:
    RestrictLoginSignupLoginSelectOrganizationIndexRoute,
  RestrictLoginSignupLoginSsoIndexRoute: RestrictLoginSignupLoginSsoIndexRoute,
  RestrictLoginSignupSignupSsoIndexRoute:
    RestrictLoginSignupSignupSsoIndexRoute,
}

const RestrictLoginSignupRouteWithChildren =
  RestrictLoginSignupRoute._addFileChildren(RestrictLoginSignupRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticateCtxOrgDetailsRouteWithChildren
  '/cli-redirect': typeof AuthenticateCliRedirectRoute
  '/email-not-verified': typeof RestrictLoginSignupEmailNotVerifiedRoute
  '/password-reset': typeof RestrictLoginSignupPasswordResetRoute
  '/requestnewinvite': typeof RestrictLoginSignupRequestnewinviteRoute
  '/signupinvite': typeof RestrictLoginSignupSignupinviteRoute
  '/verify-email': typeof RestrictLoginSignupVerifyEmailRoute
  '/personal-settings': typeof authenticatePersonalSettingsLayoutRouteWithChildren
  '/login': typeof RestrictLoginSignupLoginIndexRoute
  '/signup': typeof RestrictLoginSignupSignupIndexRoute
  '/organization': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteWithChildren
  '/login/provider/error': typeof RestrictLoginSignupLoginProviderErrorRoute
  '/login/provider/success': typeof RestrictLoginSignupLoginProviderSuccessRoute
  '/personal-settings/': typeof authenticatePersonalSettingsIndexRoute
  '/login/ldap': typeof RestrictLoginSignupLoginLdapIndexRoute
  '/login/select-organization': typeof RestrictLoginSignupLoginSelectOrganizationIndexRoute
  '/login/sso': typeof RestrictLoginSignupLoginSsoIndexRoute
  '/signup/sso': typeof RestrictLoginSignupSignupSsoIndexRoute
  '/secret-manager/$projectId': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteWithChildren
  '/organization/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute
  '/secret-manager/$projectId/overview': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute
  '/organization/none': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute
  '/organization/$organizationId/cert-manager/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute
  '/organization/$organizationId/kms/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute
  '/organization/$organizationId/secret-manager/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute
  '/organization/$organizationId/admin': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute
  '/organization/$organizationId/audit-logs': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute
  '/organization/$organizationId/billing': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute
  '/organization/$organizationId/members': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute
  '/organization/$organizationId/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute
  '/organization/$organizationId/secret-scanning': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute
  '/organization/$organizationId/secret-sharing': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute
  '/organization/$organizationId/settings': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute
  '/organization/$organizationId/groups/$groupId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute
  '/organization/$organizationId/identities/$identityId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute
  '/organization/$organizationId/memberships/$membershipId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute
  '/organization/$organizationId/roles/$roleId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticateCtxOrgDetailsRouteWithChildren
  '/cli-redirect': typeof AuthenticateCliRedirectRoute
  '/email-not-verified': typeof RestrictLoginSignupEmailNotVerifiedRoute
  '/password-reset': typeof RestrictLoginSignupPasswordResetRoute
  '/requestnewinvite': typeof RestrictLoginSignupRequestnewinviteRoute
  '/signupinvite': typeof RestrictLoginSignupSignupinviteRoute
  '/verify-email': typeof RestrictLoginSignupVerifyEmailRoute
  '/personal-settings': typeof authenticatePersonalSettingsIndexRoute
  '/login': typeof RestrictLoginSignupLoginIndexRoute
  '/signup': typeof RestrictLoginSignupSignupIndexRoute
  '/organization': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute
  '/login/provider/error': typeof RestrictLoginSignupLoginProviderErrorRoute
  '/login/provider/success': typeof RestrictLoginSignupLoginProviderSuccessRoute
  '/login/ldap': typeof RestrictLoginSignupLoginLdapIndexRoute
  '/login/select-organization': typeof RestrictLoginSignupLoginSelectOrganizationIndexRoute
  '/login/sso': typeof RestrictLoginSignupLoginSsoIndexRoute
  '/signup/sso': typeof RestrictLoginSignupSignupSsoIndexRoute
  '/secret-manager/$projectId': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteWithChildren
  '/secret-manager/$projectId/overview': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute
  '/organization/none': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute
  '/organization/$organizationId/cert-manager/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute
  '/organization/$organizationId/kms/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute
  '/organization/$organizationId/secret-manager/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute
  '/organization/$organizationId/admin': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute
  '/organization/$organizationId/audit-logs': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute
  '/organization/$organizationId/billing': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute
  '/organization/$organizationId/members': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute
  '/organization/$organizationId/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute
  '/organization/$organizationId/secret-scanning': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute
  '/organization/$organizationId/secret-sharing': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute
  '/organization/$organizationId/settings': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute
  '/organization/$organizationId/groups/$groupId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute
  '/organization/$organizationId/identities/$identityId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute
  '/organization/$organizationId/memberships/$membershipId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute
  '/organization/$organizationId/roles/$roleId': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticate': typeof AuthenticateRouteWithChildren
  '/_restrict-login-signup': typeof RestrictLoginSignupRouteWithChildren
  '/_authenticate/_ctx-org-details': typeof AuthenticateCtxOrgDetailsRouteWithChildren
  '/_authenticate/cli-redirect': typeof AuthenticateCliRedirectRoute
  '/_restrict-login-signup/email-not-verified': typeof RestrictLoginSignupEmailNotVerifiedRoute
  '/_restrict-login-signup/password-reset': typeof RestrictLoginSignupPasswordResetRoute
  '/_restrict-login-signup/requestnewinvite': typeof RestrictLoginSignupRequestnewinviteRoute
  '/_restrict-login-signup/signupinvite': typeof RestrictLoginSignupSignupinviteRoute
  '/_restrict-login-signup/verify-email': typeof RestrictLoginSignupVerifyEmailRoute
  '/_authenticate/personal-settings': typeof AuthenticatePersonalSettingsRouteWithChildren
  '/_authenticate/personal-settings/_personal-settings-layout': typeof authenticatePersonalSettingsLayoutRouteWithChildren
  '/_restrict-login-signup/login/': typeof RestrictLoginSignupLoginIndexRoute
  '/_restrict-login-signup/signup/': typeof RestrictLoginSignupSignupIndexRoute
  '/_authenticate/_ctx-org-details/organization': typeof AuthenticateCtxOrgDetailsOrganizationRouteWithChildren
  '/_authenticate/_ctx-org-details/organization/_layout-org': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgRouteWithChildren
  '/_restrict-login-signup/login/provider/error': typeof RestrictLoginSignupLoginProviderErrorRoute
  '/_restrict-login-signup/login/provider/success': typeof RestrictLoginSignupLoginProviderSuccessRoute
  '/_authenticate/personal-settings/_personal-settings-layout/': typeof authenticatePersonalSettingsIndexRoute
  '/_restrict-login-signup/login/ldap/': typeof RestrictLoginSignupLoginLdapIndexRoute
  '/_restrict-login-signup/login/select-organization/': typeof RestrictLoginSignupLoginSelectOrganizationIndexRoute
  '/_restrict-login-signup/login/sso/': typeof RestrictLoginSignupLoginSsoIndexRoute
  '/_restrict-login-signup/signup/sso/': typeof RestrictLoginSignupSignupSsoIndexRoute
  '/_authenticate/_ctx-org-details/secret-manager/$projectId': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdRouteWithChildren
  '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerRouteWithChildren
  '/_authenticate/_ctx-org-details/organization/_layout-org/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgIndexRoute
  '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager/overview': typeof AuthenticateCtxOrgDetailsSecretManagerProjectIdLayoutSecretManagerOverviewRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/none/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgNoneIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdCertManagerOverviewRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdKmsOverviewRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretManagerOverviewRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAdminIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdAuditLogsIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdBillingIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembersIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdOverviewIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretScanningIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSecretSharingIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdSettingsIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdGroupsGroupIdIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdIdentitiesIdentityIdIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdMembershipsMembershipIdIndexRoute
  '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/': typeof AuthenticateCtxOrgDetailsOrganizationLayoutOrgOrganizationIdRolesRoleIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/cli-redirect'
    | '/email-not-verified'
    | '/password-reset'
    | '/requestnewinvite'
    | '/signupinvite'
    | '/verify-email'
    | '/personal-settings'
    | '/login'
    | '/signup'
    | '/organization'
    | '/login/provider/error'
    | '/login/provider/success'
    | '/personal-settings/'
    | '/login/ldap'
    | '/login/select-organization'
    | '/login/sso'
    | '/signup/sso'
    | '/secret-manager/$projectId'
    | '/organization/'
    | '/secret-manager/$projectId/overview'
    | '/organization/none'
    | '/organization/$organizationId/cert-manager/overview'
    | '/organization/$organizationId/kms/overview'
    | '/organization/$organizationId/secret-manager/overview'
    | '/organization/$organizationId/admin'
    | '/organization/$organizationId/audit-logs'
    | '/organization/$organizationId/billing'
    | '/organization/$organizationId/members'
    | '/organization/$organizationId/overview'
    | '/organization/$organizationId/secret-scanning'
    | '/organization/$organizationId/secret-sharing'
    | '/organization/$organizationId/settings'
    | '/organization/$organizationId/groups/$groupId'
    | '/organization/$organizationId/identities/$identityId'
    | '/organization/$organizationId/memberships/$membershipId'
    | '/organization/$organizationId/roles/$roleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/cli-redirect'
    | '/email-not-verified'
    | '/password-reset'
    | '/requestnewinvite'
    | '/signupinvite'
    | '/verify-email'
    | '/personal-settings'
    | '/login'
    | '/signup'
    | '/organization'
    | '/login/provider/error'
    | '/login/provider/success'
    | '/login/ldap'
    | '/login/select-organization'
    | '/login/sso'
    | '/signup/sso'
    | '/secret-manager/$projectId'
    | '/secret-manager/$projectId/overview'
    | '/organization/none'
    | '/organization/$organizationId/cert-manager/overview'
    | '/organization/$organizationId/kms/overview'
    | '/organization/$organizationId/secret-manager/overview'
    | '/organization/$organizationId/admin'
    | '/organization/$organizationId/audit-logs'
    | '/organization/$organizationId/billing'
    | '/organization/$organizationId/members'
    | '/organization/$organizationId/overview'
    | '/organization/$organizationId/secret-scanning'
    | '/organization/$organizationId/secret-sharing'
    | '/organization/$organizationId/settings'
    | '/organization/$organizationId/groups/$groupId'
    | '/organization/$organizationId/identities/$identityId'
    | '/organization/$organizationId/memberships/$membershipId'
    | '/organization/$organizationId/roles/$roleId'
  id:
    | '__root__'
    | '/'
    | '/_authenticate'
    | '/_restrict-login-signup'
    | '/_authenticate/_ctx-org-details'
    | '/_authenticate/cli-redirect'
    | '/_restrict-login-signup/email-not-verified'
    | '/_restrict-login-signup/password-reset'
    | '/_restrict-login-signup/requestnewinvite'
    | '/_restrict-login-signup/signupinvite'
    | '/_restrict-login-signup/verify-email'
    | '/_authenticate/personal-settings'
    | '/_authenticate/personal-settings/_personal-settings-layout'
    | '/_restrict-login-signup/login/'
    | '/_restrict-login-signup/signup/'
    | '/_authenticate/_ctx-org-details/organization'
    | '/_authenticate/_ctx-org-details/organization/_layout-org'
    | '/_restrict-login-signup/login/provider/error'
    | '/_restrict-login-signup/login/provider/success'
    | '/_authenticate/personal-settings/_personal-settings-layout/'
    | '/_restrict-login-signup/login/ldap/'
    | '/_restrict-login-signup/login/select-organization/'
    | '/_restrict-login-signup/login/sso/'
    | '/_restrict-login-signup/signup/sso/'
    | '/_authenticate/_ctx-org-details/secret-manager/$projectId'
    | '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/'
    | '/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager/overview'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/none/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/'
    | '/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticateRoute: typeof AuthenticateRouteWithChildren
  RestrictLoginSignupRoute: typeof RestrictLoginSignupRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticateRoute: AuthenticateRouteWithChildren,
  RestrictLoginSignupRoute: RestrictLoginSignupRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticate",
        "/_restrict-login-signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticate": {
      "filePath": "_authenticate.tsx",
      "children": [
        "/_authenticate/_ctx-org-details",
        "/_authenticate/cli-redirect",
        "/_authenticate/personal-settings"
      ]
    },
    "/_restrict-login-signup": {
      "filePath": "_restrict-login-signup.tsx",
      "children": [
        "/_restrict-login-signup/email-not-verified",
        "/_restrict-login-signup/password-reset",
        "/_restrict-login-signup/requestnewinvite",
        "/_restrict-login-signup/signupinvite",
        "/_restrict-login-signup/verify-email",
        "/_restrict-login-signup/login/",
        "/_restrict-login-signup/signup/",
        "/_restrict-login-signup/login/provider/error",
        "/_restrict-login-signup/login/provider/success",
        "/_restrict-login-signup/login/ldap/",
        "/_restrict-login-signup/login/select-organization/",
        "/_restrict-login-signup/login/sso/",
        "/_restrict-login-signup/signup/sso/"
      ]
    },
    "/_authenticate/_ctx-org-details": {
      "filePath": "_authenticate/_ctx-org-details.tsx",
      "parent": "/_authenticate",
      "children": [
        "/_authenticate/_ctx-org-details/organization",
        "/_authenticate/_ctx-org-details/secret-manager/$projectId"
      ]
    },
    "/_authenticate/cli-redirect": {
      "filePath": "_authenticate/cli-redirect.tsx",
      "parent": "/_authenticate"
    },
    "/_restrict-login-signup/email-not-verified": {
      "filePath": "_restrict-login-signup/email-not-verified.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/password-reset": {
      "filePath": "_restrict-login-signup/password-reset.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/requestnewinvite": {
      "filePath": "_restrict-login-signup/requestnewinvite.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/signupinvite": {
      "filePath": "_restrict-login-signup/signupinvite.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/verify-email": {
      "filePath": "_restrict-login-signup/verify-email.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_authenticate/personal-settings": {
      "filePath": "_authenticate/personal-settings",
      "parent": "/_authenticate",
      "children": [
        "/_authenticate/personal-settings/_personal-settings-layout"
      ]
    },
    "/_authenticate/personal-settings/_personal-settings-layout": {
      "filePath": "_authenticate/personal-settings/layout.tsx",
      "parent": "/_authenticate/personal-settings",
      "children": [
        "/_authenticate/personal-settings/_personal-settings-layout/"
      ]
    },
    "/_restrict-login-signup/login/": {
      "filePath": "_restrict-login-signup/login/index.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/signup/": {
      "filePath": "_restrict-login-signup/signup/index.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_authenticate/_ctx-org-details/organization": {
      "filePath": "_authenticate/_ctx-org-details/organization",
      "parent": "/_authenticate/_ctx-org-details",
      "children": [
        "/_authenticate/_ctx-org-details/organization/_layout-org"
      ]
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization",
      "children": [
        "/_authenticate/_ctx-org-details/organization/_layout-org/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/none/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/",
        "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/"
      ]
    },
    "/_restrict-login-signup/login/provider/error": {
      "filePath": "_restrict-login-signup/login/provider/error.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/login/provider/success": {
      "filePath": "_restrict-login-signup/login/provider/success.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_authenticate/personal-settings/_personal-settings-layout/": {
      "filePath": "_authenticate/personal-settings/index.tsx",
      "parent": "/_authenticate/personal-settings/_personal-settings-layout"
    },
    "/_restrict-login-signup/login/ldap/": {
      "filePath": "_restrict-login-signup/login/ldap/index.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/login/select-organization/": {
      "filePath": "_restrict-login-signup/login/select-organization/index.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/login/sso/": {
      "filePath": "_restrict-login-signup/login/sso/index.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_restrict-login-signup/signup/sso/": {
      "filePath": "_restrict-login-signup/signup/sso/index.tsx",
      "parent": "/_restrict-login-signup"
    },
    "/_authenticate/_ctx-org-details/secret-manager/$projectId": {
      "filePath": "_authenticate/_ctx-org-details/secret-manager.$projectId",
      "parent": "/_authenticate/_ctx-org-details",
      "children": [
        "/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager"
      ]
    },
    "/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager": {
      "filePath": "_authenticate/_ctx-org-details/secret-manager.$projectId/_layout-secret-manager.tsx",
      "parent": "/_authenticate/_ctx-org-details/secret-manager/$projectId",
      "children": [
        "/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager/overview"
      ]
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager/overview": {
      "filePath": "_authenticate/_ctx-org-details/secret-manager.$projectId/_layout-secret-manager/overview.tsx",
      "parent": "/_authenticate/_ctx-org-details/secret-manager/$projectId/_layout-secret-manager"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/none/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/none/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/cert-manager/overview.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/kms/overview.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-manager/overview.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/admin/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/audit-logs/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/billing/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/members/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/overview/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-scanning/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/secret-sharing/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/settings/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/groups/$groupId/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/identities/$identityId/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/memberships/$membershipId/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    },
    "/_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/": {
      "filePath": "_authenticate/_ctx-org-details/organization/_layout-org/$organizationId/roles/$roleId/index.tsx",
      "parent": "/_authenticate/_ctx-org-details/organization/_layout-org"
    }
  }
}
ROUTE_MANIFEST_END */
