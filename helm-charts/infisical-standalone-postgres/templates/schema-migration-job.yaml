{{- $infisicalValues := .Values.infisical }}
{{- if $infisicalValues.autoDatabaseSchemaMigration }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-schema-migration-{{ .Release.Revision }}"
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  backoffLimit: 10
  template:
    metadata:
      name: "{{ .Release.Name }}-create-tables"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ include "infisical.serviceAccountName" . }}
    {{- if $infisicalValues.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $infisicalValues.image.imagePullSecrets | nindent 6 }}
    {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: infisical-schema-migration
          image: "{{ $infisicalValues.image.repository }}:{{ $infisicalValues.image.tag }}"
          {{- if .Values.postgresql.auth.existingSecret }}
          command: ["/bin/sh"]
          args:
            - -c
            - |
              export DB_CONNECTION_URI="postgresql://{{ .Values.postgresql.auth.username }}:${DB_PASSWORD}@{{ include "infisical.postgresService" . }}:5432/{{ .Values.postgresql.auth.database }}"
              npm run migration:latest
          {{- else }}
          command: ["npm", "run", "migration:latest"]
          {{- end }}
          env:
          {{- if .Values.postgresql.useExistingPostgresSecret.enabled }}
          - name: DB_CONNECTION_URI
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.useExistingPostgresSecret.existingConnectionStringSecret.name }}
                key: {{ .Values.postgresql.useExistingPostgresSecret.existingConnectionStringSecret.key }}
          {{- else if not .Values.postgresql.auth.existingSecret }}
          - name: DB_CONNECTION_URI
            value: {{ include "infisical.postgresDBConnectionString" . }}  
          {{- end }}
          {{- if .Values.postgresql.auth.existingSecret }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.auth.existingSecret }}
                key: {{ .Values.postgresql.auth.secretKeys.userPasswordKey }}
          {{- end }}
          envFrom:
          - secretRef:
              name: {{ $infisicalValues.kubeSecretRef }}

{{- end }}