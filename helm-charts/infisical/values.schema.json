{
  "properties": {
    "backend": {
      "properties": {
        "affinity": {
          "description": "Backend pod affinity",
          "title": "affinity",
          "type": "object"
        },
        "deploymentAnnotations": {
          "description": "Backend deployment annotations",
          "title": "deploymentAnnotations",
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Enable backend",
          "title": "enabled",
          "type": "boolean"
        },
        "fullnameOverride": {
          "default": "",
          "description": "Backend fullnameOverride",
          "title": "fullnameOverride",
          "type": "string"
        },
        "image": {
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Backend image pullPolicy",
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "infisical/infisical",
              "description": "Backend image repository",
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "description": "Backend image tag",
              "title": "tag",
              "type": "string"
            }
          },
          "description": "Backend image parameters",
          "title": "image",
          "type": "object"
        },
        "kubeSecretRef": {
          "default": "",
          "description": "Backend secret resource reference name (containing required [backend configuration variables](https://infisical.com/docs/self-hosting/configuration/envars))",
          "title": "kubeSecretRef",
          "type": "string"
        },
        "name": {
          "default": "backend",
          "description": "Backend name",
          "title": "name",
          "type": "string"
        },
        "podAnnotations": {
          "description": "Backend pod annotations",
          "title": "podAnnotations",
          "type": "object"
        },
        "replicaCount": {
          "default": "2",
          "description": "Backend replica count",
          "title": "replicaCount",
          "type": "integer"
        },
        "service": {
          "properties": {
            "annotations": {
              "description": "Backend service annotations",
              "title": "annotations",
              "type": "object"
            },
            "nodePort": {
              "default": "",
              "description": "Backend service nodePort (used if above type is `NodePort`)",
              "title": "nodePort",
              "type": "string"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Backend service type",
              "title": "type",
              "type": "string"
            }
          },
          "description": "Backend service",
          "title": "service",
          "type": "object"
        }
      },
      "description": "Infisical backend parameters\nhttps://infisical.com/docs/self-hosting/deployments/kubernetes",
      "title": "backend",
      "type": "object"
    },
    "backendEnvironmentVariables": {
      "properties": {
        "ENCRYPTION_KEY": {
          "default": "",
          "description": "Command to generate the required value (linux) : 'hexdump -vn16 -e'4/4 \"%08X\" 1 \"\\n\"' /dev/urandom', 'openssl rand -hex 16'\n**Required** Backend encryption key (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "ENCRYPTION_KEY",
          "type": "string"
        },
        "INVITE_ONLY_SIGNUP": {
          "default": "false",
          "description": "To disable account creation from the login page (invites only)",
          "title": "INVITE_ONLY_SIGNUP",
          "type": "boolean"
        },
        "JWT_AUTH_SECRET": {
          "default": "",
          "description": "**Required** Secrets to sign JWT tokens (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "JWT_AUTH_SECRET",
          "type": "string"
        },
        "JWT_MFA_SECRET": {
          "default": "",
          "description": "**Required** Secrets to sign JWT tokens (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "JWT_MFA_SECRET",
          "type": "string"
        },
        "JWT_PROVIDER_AUTH_SECRET": {
          "default": "",
          "description": "**Required** Secrets to sign JWT OAuth tokens (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "JWT_PROVIDER_AUTH_SECRET",
          "type": "string"
        },
        "JWT_REFRESH_SECRET": {
          "default": "",
          "description": "**Required** Secrets to sign JWT tokens (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "JWT_REFRESH_SECRET",
          "type": "string"
        },
        "JWT_SERVICE_SECRET": {
          "default": "",
          "description": "**Required** Secrets to sign JWT tokens (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "JWT_SERVICE_SECRET",
          "type": "string"
        },
        "JWT_SIGNUP_SECRET": {
          "default": "",
          "description": "Command to generate the required value (linux) : 'hexdump -vn16 -e'4/4 \"%08X\" 1 \"\\n\"' /dev/urandom', 'openssl rand -hex 16'\n**Required** Secrets to sign JWT tokens (128-bit hex value, 32-characters hex, [example](https://stackoverflow.com/a/34329057))\u003c/br\u003e\u003ckbd\u003eauto-generated\u003c/kbd\u003e variable (if not provided, and not found in an existing secret)",
          "title": "JWT_SIGNUP_SECRET",
          "type": "string"
        },
        "MONGO_URL": {
          "default": "",
          "description": "## By default the backend will automatically be connected to a Mongo instance within the cluster\n## However, it is recommended to add a managed document DB connection string for production-use (DBaaS)\n## Learn about connection string type here https://www.mongodb.com/docs/manual/reference/connection-string/\n## e.g. \"mongodb://\u003cuser\u003e:\u003cpass\u003e@\u003chost\u003e:\u003cport\u003e/\u003cdatabase-name\u003e\"\nMongoDB connection string (external or internal)\u003c/br\u003eLeave it empty for auto-generated connection string",
          "title": "MONGO_URL",
          "type": "string"
        },
        "REDIS_URL": {
          "default": "redis://redis-master:6379",
          "description": "By default, the backend will use the Redis that is auto deployed along with Infisical\nRedis URL (cache service)",
          "title": "REDIS_URL",
          "type": "string"
        },
        "SITE_URL": {
          "default": "infisical.local",
          "description": "Absolute URL including the protocol (e.g. https://app.infisical.com)",
          "title": "SITE_URL",
          "type": "string"
        },
        "SMTP_FROM_ADDRESS": {
          "default": "",
          "description": "**Required** Email address to be used for sending emails (e.g. dev@infisical.com)",
          "title": "SMTP_FROM_ADDRESS",
          "type": "string"
        },
        "SMTP_FROM_NAME": {
          "default": "Infisical",
          "description": "Name label to be used in From field (e.g. Infisical)",
          "title": "SMTP_FROM_NAME",
          "type": "string"
        },
        "SMTP_HOST": {
          "default": "",
          "description": "**Required** Hostname to connect to for establishing SMTP connections",
          "title": "SMTP_HOST",
          "type": "string"
        },
        "SMTP_PASSWORD": {
          "default": "",
          "description": "**Required** Credential to connect to host",
          "title": "SMTP_PASSWORD",
          "type": "string"
        },
        "SMTP_PORT": {
          "default": "587",
          "description": "Port to connect to for establishing SMTP connections",
          "title": "SMTP_PORT",
          "type": "integer"
        },
        "SMTP_SECURE": {
          "default": "false",
          "description": "If true, use TLS when connecting to host. If false, TLS will be used if STARTTLS is supported",
          "title": "SMTP_SECURE",
          "type": "boolean"
        },
        "SMTP_USERNAME": {
          "default": "",
          "description": "**Required** Credential to connect to host (e.g. team@infisical.com)",
          "title": "SMTP_USERNAME",
          "type": "string"
        }
      },
      "description": "Backend variables configuration\nhttps://infisical.com/docs/self-hosting/configuration/envars",
      "title": "backendEnvironmentVariables",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "description": "Override release fullname",
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "title": "global",
      "type": "object"
    },
    "ingress": {
      "properties": {
        "annotations": {
          "description": "Ingress annotations",
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Enable ingress",
          "title": "enabled",
          "type": "boolean"
        },
        "hostName": {
          "default": "",
          "description": "kubernetes.io/ingress.class: \"nginx\"\ncert-manager.io/issuer: letsencrypt-nginx\nIngress hostname (your custom domain name, e.g. `infisical.example.org`).\nReplace with your own domain",
          "title": "hostName",
          "type": "string"
        },
        "ingressClassName": {
          "default": "nginx",
          "description": "Ingress class name",
          "title": "ingressClassName",
          "type": "string"
        },
        "nginx": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Enable and install `ingress-nginx` controller",
              "title": "enabled",
              "type": "boolean"
            }
          },
          "title": "nginx",
          "type": "object"
        },
        "tls": {
          "items": {},
          "description": "Ingress TLS hosts (matching above hostName).\nReplace with your own domain",
          "title": "tls",
          "type": "array"
        }
      },
      "description": "Ingress parameters",
      "title": "ingress",
      "type": "object"
    },
    "mailhog": {
      "properties": {
        "containerPort": {
          "properties": {
            "http": {
              "properties": {
                "name": {
                  "default": "http",
                  "title": "name",
                  "type": "string"
                },
                "port": {
                  "default": "8025",
                  "title": "port",
                  "type": "integer"
                }
              },
              "description": "Mailhog HTTP port (Web UI)",
              "title": "http",
              "type": "object"
            },
            "smtp": {
              "properties": {
                "name": {
                  "default": "tcp-smtp",
                  "title": "name",
                  "type": "string"
                },
                "port": {
                  "default": "1025",
                  "title": "port",
                  "type": "integer"
                }
              },
              "description": "Mailhog SMTP port (Mail)",
              "title": "smtp",
              "type": "object"
            }
          },
          "title": "containerPort",
          "type": "object"
        },
        "enabled": {
          "default": "false",
          "description": "Enable Mailhog",
          "title": "enabled",
          "type": "boolean"
        },
        "fullnameOverride": {
          "default": "mailhog",
          "description": "Fullname override",
          "title": "fullnameOverride",
          "type": "string"
        },
        "image": {
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy",
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "lytrax/mailhog",
              "description": "Why we use this version : https://github.com/mailhog/MailHog/issues/353#issuecomment-821137362\nImage repository",
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "description": "Image tag",
              "title": "tag",
              "type": "string"
            }
          },
          "title": "image",
          "type": "object"
        },
        "ingress": {
          "properties": {
            "annotations": {
              "description": "Ingress annotations",
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": "true",
              "description": "Enable ingress",
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "items": {
                "anyOf": [
                  {
                    "properties": {
                      "host": {
                        "default": "mailhog.infisical.local",
                        "title": "host",
                        "type": "string"
                      },
                      "paths": {
                        "items": {
                          "anyOf": [
                            {
                              "properties": {
                                "path": {
                                  "default": "/",
                                  "title": "path",
                                  "type": "string"
                                },
                                "pathType": {
                                  "default": "Prefix",
                                  "title": "pathType",
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "description": "Mailhog paths",
                        "title": "paths",
                        "type": "array"
                      }
                    }
                  }
                ]
              },
              "title": "hosts",
              "type": "array"
            },
            "ingressClassName": {
              "default": "nginx",
              "description": "Ingress class name",
              "title": "ingressClassName",
              "type": "string"
            },
            "labels": {
              "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nIngress labels",
              "title": "labels",
              "type": "object"
            }
          },
          "description": "Mailhog ingress",
          "title": "ingress",
          "type": "object"
        },
        "nameOverride": {
          "default": "",
          "description": "Name override",
          "title": "nameOverride",
          "type": "string"
        },
        "service": {
          "properties": {
            "annotations": {
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "",
              "title": "clusterIP",
              "type": "string"
            },
            "externalIPs": {
              "items": {},
              "title": "externalIPs",
              "type": "array"
            },
            "extraPorts": {
              "items": {},
              "title": "extraPorts",
              "type": "array"
            },
            "loadBalancerIP": {
              "default": "",
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "items": {},
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "namedTargetPort": {
              "default": "true",
              "description": "Named target ports are not supported by GCE health checks, so when deploying on GKE\nand exposing it via GCE ingress, the health checks fail and the load balancer returns a 502.",
              "title": "namedTargetPort",
              "type": "boolean"
            },
            "nodePort": {
              "properties": {
                "http": {
                  "default": "",
                  "title": "http",
                  "type": "string"
                },
                "smtp": {
                  "default": "",
                  "title": "smtp",
                  "type": "string"
                }
              },
              "title": "nodePort",
              "type": "object"
            },
            "port": {
              "properties": {
                "http": {
                  "default": "8025",
                  "title": "http",
                  "type": "integer"
                },
                "smtp": {
                  "default": "1025",
                  "title": "smtp",
                  "type": "integer"
                }
              },
              "title": "port",
              "type": "object"
            },
            "type": {
              "default": "ClusterIP",
              "title": "type",
              "type": "string"
            }
          },
          "title": "service",
          "type": "object"
        }
      },
      "description": "Mailhog parameters\nhttps://github.com/codecentric/helm-charts/blob/master/charts/mailhog/values.yaml",
      "title": "mailhog",
      "type": "object"
    },
    "mongodb": {
      "properties": {
        "architecture": {
          "default": "standalone",
          "description": "MongoDB(\u0026reg;) architecture (`standalone` or `replicaset`)",
          "title": "architecture",
          "type": "string"
        },
        "auth": {
          "properties": {
            "databases": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "Custom databases list ([special characters warning](https://www/docs/manual/reference/connection-string/#standard-connection-string-format))",
              "title": "databases",
              "type": "array"
            },
            "enabled": {
              "default": "true",
              "description": "Enable custom authentication",
              "title": "enabled",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "description": "NOTE: When it's set the previous parameters are ignored.\nExisting secret with MongoDB(\u0026reg;) credentials (keys: `mongodb-passwords`, `mongodb-root-password`, `mongodb-metrics-password`, `mongodb-replica-set-key`)",
              "title": "existingSecret",
              "type": "string"
            },
            "passwords": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "Custom passwords list, match the above usernames order ([special characters warning](https://www/docs/manual/reference/connection-string/#standard-connection-string-format))",
              "title": "passwords",
              "type": "array"
            },
            "rootPassword": {
              "default": "root",
              "description": "Database root user password",
              "title": "rootPassword",
              "type": "string"
            },
            "rootUser": {
              "default": "root",
              "description": "Database root user name",
              "title": "rootUser",
              "type": "string"
            },
            "usernames": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "Custom usernames list ([special characters warning](https://www/docs/manual/reference/connection-string/#standard-connection-string-format))",
              "title": "usernames",
              "type": "array"
            }
          },
          "description": "Infisical MongoDB custom authentication",
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Enable MongoDB(\u0026reg;)",
          "title": "enabled",
          "type": "boolean"
        },
        "fullnameOverride": {
          "default": "mongodb",
          "description": "Fullname override",
          "title": "fullnameOverride",
          "type": "string"
        },
        "image": {
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "MongoDB(\u0026reg;) image pull policy",
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "bitnami/mongodb",
              "description": "MongoDB(\u0026reg;) image registry",
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "6.0.4-debian-11-r0",
              "description": "MongoDB(\u0026reg;) image tag (immutable tags are recommended)",
              "title": "tag",
              "type": "string"
            }
          },
          "description": "Bitnami MongoDB(\u0026reg;) image\nhttps://hub.docker.com/r/bitnami/mongodb/tags/",
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "properties": {
            "enabled": {
              "default": "true",
              "description": "Enable livenessProbe",
              "title": "enabled",
              "type": "boolean"
            },
            "failureThreshold": {
              "default": "6",
              "description": "Failure threshold for livenessProbe",
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": "30",
              "description": "Initial delay seconds for livenessProbe",
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": "20",
              "description": "Period seconds for livenessProbe",
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "default": "1",
              "description": "Success threshold for livenessProbe",
              "title": "successThreshold",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": "10",
              "description": "Timeout seconds for livenessProbe",
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "description": "Bitnami MongoDB(\u0026reg;) pods' liveness probe\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes",
          "title": "livenessProbe",
          "type": "object"
        },
        "name": {
          "default": "mongodb",
          "description": "Name used to build variables (deprecated)",
          "title": "name",
          "type": "string"
        },
        "nameOverride": {
          "default": "mongodb",
          "description": "Name override",
          "title": "nameOverride",
          "type": "string"
        },
        "persistence": {
          "properties": {
            "accessModes": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "Persistent volume access modes",
              "title": "accessModes",
              "type": "array"
            },
            "enabled": {
              "default": "true",
              "description": "Enable database persistence",
              "title": "enabled",
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "description": "Existing persistent volume claim name",
              "title": "existingClaim",
              "type": "string"
            },
            "resourcePolicy": {
              "default": "keep",
              "description": "Keep the persistent volume even on deletion (`keep` or `\"\"`)",
              "title": "resourcePolicy",
              "type": "string"
            },
            "size": {
              "default": "8Gi",
              "description": "Persistent storage request size",
              "title": "size",
              "type": "string"
            }
          },
          "description": "MongoDB persistence configuration",
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "description": "Pod annotations",
          "title": "podAnnotations",
          "type": "object"
        },
        "readinessProbe": {
          "properties": {
            "enabled": {
              "default": "true",
              "description": "Enable readinessProbe",
              "title": "enabled",
              "type": "boolean"
            },
            "failureThreshold": {
              "default": "6",
              "description": "Failure threshold for readinessProbe",
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": "5",
              "description": "Initial delay seconds for readinessProbe",
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": "10",
              "description": "Period seconds for readinessProbe",
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "default": "1",
              "description": "Success threshold for readinessProbe",
              "title": "successThreshold",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": "10",
              "description": "Timeout seconds for readinessProbe",
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "description": "Bitnami MongoDB(\u0026reg;) pods' readiness probe. Evaluated as a template.\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes",
          "title": "readinessProbe",
          "type": "object"
        },
        "service": {
          "properties": {
            "annotations": {
              "description": "Service annotations",
              "title": "annotations",
              "type": "object"
            }
          },
          "title": "service",
          "type": "object"
        },
        "useStatefulSet": {
          "default": "true",
          "description": "Set to true to use a StatefulSet instead of a Deployment (only when `architecture: standalone`)",
          "title": "useStatefulSet",
          "type": "boolean"
        }
      },
      "description": "MongoDB parameters\nhttps://github.com/bitnami/charts/blob/main/bitnami/mongodb/values.yaml",
      "title": "mongodb",
      "type": "object"
    },
    "mongodbConnection": {
      "properties": {
        "externalMongoDBConnectionString": {
          "default": "",
          "description": "By default the backend will be connected to a Mongo instance within the cluster\nHowever, it is recommended to add a managed document DB connection string for production-use (DBaaS)\nLearn about connection string type here https://www/docs/manual/reference/connection-string/\ne.g. \"mongodb://\u003cuser\u003e:\u003cpass\u003e@\u003chost\u003e:\u003cport\u003e/\u003cdatabase-name\u003e\"\nDeprecated :warning: External MongoDB connection string\u003c/br\u003eUse `backendEnvironmentVariables.MONGO_URL` instead",
          "title": "externalMongoDBConnectionString",
          "type": "string"
        }
      },
      "title": "mongodbConnection",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Override release name",
      "title": "nameOverride",
      "type": "string"
    },
    "redis": {
      "properties": {
        "architecture": {
          "default": "standalone",
          "description": "Redis architecture",
          "title": "architecture",
          "type": "string"
        },
        "auth": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Redis authentication",
              "title": "enabled",
              "type": "boolean"
            }
          },
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Enable Redis",
          "title": "enabled",
          "type": "boolean"
        },
        "fullnameOverride": {
          "default": "redis",
          "description": "Redis fullname override",
          "title": "fullnameOverride",
          "type": "string"
        },
        "name": {
          "default": "redis",
          "description": "Redis deployment name",
          "title": "name",
          "type": "string"
        }
      },
      "description": "Redis parameters\nhttps://github.com/bitnami/charts/tree/main/bitnami/redis#parameters",
      "title": "redis",
      "type": "object"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object"
}